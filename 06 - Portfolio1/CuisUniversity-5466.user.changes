

----QUIT----(22 August 2022 12:39:39) CuisUniversity-5466.image priorSource: 2778666!

----STARTUP---- (22 August 2022 12:39:39) as /Users/hernan/Documents/Cuis/5.0-64Bits/Cuis-University-Installer/CuisUniversity-5466.image!


----QUIT----(22 August 2022 12:39:39) CuisUniversity-5466.image priorSource: 7018121!

----STARTUP---- (25 August 2022 21:31:08) as /home/clinux01/Descargas/linux64/CuisUniversity-5466.image!


ObjectBuilder create: #I
	collaboratorNames: ''
	in: 'NaturalNumbers'
	!

!classDefinition: #I category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:32:04'!
DenotativeObject subclass: #I
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'I class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:32:04'!
I class
	instanceVariableNames: ''!

!classDefinition: #II category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:32:30'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!
!I class methodsFor: 'no messages' stamp: 'MA 8/25/2022 21:32:27'!
next
	^II! !
!I class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:33:15'!
+ anAdder
	anAdder next.! !

!classDefinition: 'II class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:34:29'!
II class
	instanceVariableNames: 'next'!
!II class methodsFor: 'no messages' stamp: 'MA 8/25/2022 21:34:26'!
next
	next ifNil: [
		next := II createChildNamed: self name , 'I'.
		next previous: self].
	^next! !

!classDefinition: 'II class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:35:12'!
II class
	instanceVariableNames: 'next previous'!
!II class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:35:10'!
previous
	^previous.! !
!II class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:35:42'!
previous: aPrevious
	previous := aPrevious! !
!II class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:36:17'!
add: anAdder
	self previous + anAdder next! !

II next!

!classDefinition: #III category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:36:27'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'III class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:36:27'!
III class
	instanceVariableNames: ''!

II next!
!II class methodsFor: 'nil' stamp: 'MA 8/25/2022 21:37:39'!
removeAllNext
	
	next ifNotNil:
	[
		next removeAllNext.
		next removeFromSystem.
		next := nil.
	]! !

II + III!
!II class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:38:10'!
+ anAdder
	self previous + anAdder next! !

II
	collaboratorNames: 'next previous'
	in: 'NaturalNumbers'!

!classDefinition: 'II class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:38:25'!
II class
	instanceVariableNames: 'next previous'!

!classDefinition: #II category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:38:25'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'II class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:38:25'!
II class
	instanceVariableNames: 'next previous'!

II
	collaboratorNames: 'next previous'
	in: 'NaturalNumbers'!

!classDefinition: 'II class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:38:31'!
II class
	instanceVariableNames: 'next previous'!

!classDefinition: #II category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:38:31'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'II class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:38:31'!
II class
	instanceVariableNames: 'next previous'!

II + III!

!classDefinition: #IIII category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:38:33'!
II subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'IIII class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:38:33'!
IIII class
	instanceVariableNames: ''!

II + III!

II removeAllNext!

!classRemoval: #IIII stamp: 'MA 8/25/2022 21:39:08'!
II subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #III stamp: 'MA 8/25/2022 21:39:08'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

II + I!

II + I!

II + I!

!classDefinition: #III category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:40:18'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'III class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:40:18'!
III class
	instanceVariableNames: ''!

II + I!

II + II!

!classDefinition: #IIII category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:40:23'!
II subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'IIII class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:40:23'!
IIII class
	instanceVariableNames: ''!

II + II!
!II class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:40:42' prior: 50551050!
+ anAdder
	^self previous + anAdder next! !

II + II!
!II class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:40:58' prior: 50551135!
+ anAdder
	^ self previous + anAdder next.! !

II + II!

!classRemoval: #III stamp: 'MA 8/25/2022 21:41:09'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #IIII stamp: 'MA 8/25/2022 21:41:11'!
II subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

II + II!

!classDefinition: #AnObsoleteIIII category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:41:16'!
II subclass: #AnObsoleteIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'AnObsoleteIIII class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:41:16'!
AnObsoleteIIII class
	instanceVariableNames: ''!

!classRemoval: #AnObsoleteIIII stamp: 'MA 8/25/2022 21:41:21'!
II subclass: #AnObsoleteIIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

II + II!

!classDefinition: #III category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:41:31'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'III class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:41:31'!
III class
	instanceVariableNames: ''!

!classDefinition: #IIII category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:41:31'!
II subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'IIII class' category: 'NaturalNumbers' stamp: 'MA 8/25/2022 21:41:31'!
IIII class
	instanceVariableNames: ''!
!I class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:41:44' prior: 50551003!
+ anAdder
	^anAdder next.! !

II + II!

II - I!
!II class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:42:20'!
- anI 
	self shouldBeImplemented.! !
!II class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:43:34' prior: 50551199!
- aSubstractor
	^previous - aSubstractor previous ! !
!I class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:43:56'!
previous
	^I.! !

II - I!
!I class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:45:03'!
- aSubstractor
	! !

!methodRemoval: I class #previous stamp: 'MA 8/25/2022 21:45:22'!
previous
	^I.!

!methodRemoval: I class #+ stamp: 'MA 8/25/2022 21:46:01'!
+ anAdder
	^anAdder next.!

!methodRemoval: I class #- stamp: 'MA 8/25/2022 21:46:01'!
- aSubstractor
	!

!methodRemoval: I class #next stamp: 'MA 8/25/2022 21:46:01'!
next
	^II!
!I class methodsFor: 'no messages' stamp: 'MA 8/25/2022 21:47:01'!
next
	^II.! !
!I class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:47:24'!
+ anAdder
	anAdder + 1.! !
!I class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:47:30' prior: 50551229!
+ anAdder
	^anAdder + 1.! !

II removeAllNext!

!classRemoval: #IIII stamp: 'MA 8/25/2022 21:47:44'!
II subclass: #IIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #III stamp: 'MA 8/25/2022 21:47:44'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

1 = '1'!
!II class methodsFor: 'as yet unclassified' stamp: 'MA 8/25/2022 21:51:07' prior: 50551204!
- subtrahend
	subtrahend = I ifTrue: [ previous ].
	^self previous - subtrahend previous ! !

----End fileIn of /home/clinux01/Descargas/linux64/Packages/TerseGuide.pck.st----!

----STARTUP---- (1 September 2022 16:55:39) as /home/clinux01/Descargas/linux64/CuisUniversity-5466.image!


----End fileIn of /home/clinux01/Descargas/linux64/NaturalNumbers.st----!

II + II !

!classDefinition: #III category: 'NaturalNumbers' stamp: 'Ec 9/1/2022 16:56:48'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'III class' category: 'NaturalNumbers' stamp: 'Ec 9/1/2022 16:56:48'!
III class
	instanceVariableNames: ''!

!classDefinition: #IV category: 'NaturalNumbers' stamp: 'Ec 9/1/2022 16:56:48'!
II subclass: #IV
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'IV class' category: 'NaturalNumbers' stamp: 'Ec 9/1/2022 16:56:48'!
IV class
	instanceVariableNames: ''!

Assert that: II+II isEqualTo: IV!

Assert that: II+II isEqualTo: IV!

Assert that: II+II isEqualTo: IV!

II removeAllNext!

!classRemoval: #IV stamp: 'Ec 9/1/2022 16:58:31'!
II subclass: #IV
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #III stamp: 'Ec 9/1/2022 16:58:31'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

----STARTUP---- (1 September 2022 17:02:44) as /home/clinux01/Descargas/linux64/CuisUniversity-5466.image!


----End fileIn of /home/clinux01/Descargas/linux64/NaturalNumbers.st----!

----End fileIn of /home/clinux01/Descargas/linux64/Roman Numbers Tests(1).st----!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
ERROR!

!classDefinition: #III category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:03:45'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'III class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:03:45'!
III class
	instanceVariableNames: ''!

!classDefinition: #IV category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:03:45'!
II subclass: #IV
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'IV class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:03:45'!
IV class
	instanceVariableNames: ''!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:03:45'!
PASSED!
!I class methodsFor: 'operations' stamp: 'E 9/1/2022 17:05:30'!
/ aDivisor
	(I=aDivisor) ifTrue: [^I].
	^'Can''t divide by bigger number'! !
!I class methodsFor: 'operations' stamp: 'E 9/1/2022 17:05:31' prior: 50554807!
/ aDivisor
	(I=aDivisor) ifTrue: [^I].
	^'Can''t divide by bigger number'.! !

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:05:52'!
PASSED!

IV / II !

IV / II!

IV - II !

IV / II!

IV + I !

!classDefinition: #V category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:14'!
II subclass: #V
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'V class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:14'!
V class
	instanceVariableNames: ''!

V / II !

V / III!

!classDefinition: #VI category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:27'!
II subclass: #VI
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'VI class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:27'!
VI class
	instanceVariableNames: ''!

V / V!

!classDefinition: #VII category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:30'!
II subclass: #VII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'VII class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:30'!
VII class
	instanceVariableNames: ''!

!classDefinition: #VIII category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:31'!
II subclass: #VIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'VIII class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:31'!
VIII class
	instanceVariableNames: ''!

!classDefinition: #IX category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:31'!
II subclass: #IX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'IX class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:31'!
IX class
	instanceVariableNames: ''!

!classDefinition: #X category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:31'!
II subclass: #X
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'X class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:07:31'!
X class
	instanceVariableNames: ''!
!II class methodsFor: 'operations' stamp: 'E 9/1/2022 17:08:01' prior: 50554604!
/ aDivisor
	( aDivisor > self) ifTrue: [self error: self canNotDivideByBiggerNumberErrorDescription ].
	(aDivisor = I) ifTrue: [^self].
	( (self > aDivisor) & (aDivisor * II > self) ) | self = aDivisor ifTrue: [^I].
	^ I + ( (self - aDivisor) / (aDivisor) ).! !

V / V !

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:15'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:08:21'!
ERROR!

II
	collaboratorNames: 'next previous'
	in: 'NaturalNumbers'!

!classDefinition: 'II class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:11:28'!
II class
	instanceVariableNames: 'next previous'!

!classDefinition: #II category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:11:28'!
DenotativeObject subclass: #II
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classDefinition: 'II class' category: 'NaturalNumbers' stamp: 'E 9/1/2022 17:11:28'!
II class
	instanceVariableNames: 'next previous'!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:14'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
ERROR!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:13:21'!
ERROR!
!I class methodsFor: 'operations' stamp: 'E 9/1/2022 17:14:15' prior: 50554812!
/ aDivisor
	(I=aDivisor) ifTrue: [^I].
	^self error: 'Can''t divide by bigger number'.! !

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!

!testRun: #DenotativeObjectTestCase #performRealTest stamp: 'E 9/1/2022 17:14:20'!
PASSED!
!II class methodsFor: '--** private fileout/in **--' stamp: 'E 9/1/2022 17:15:49' overrides: 50506863!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := III.
	previous := I.! !
!III class methodsFor: '--** private fileout/in **--' stamp: 'E 9/1/2022 17:15:49' overrides: 50555134!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := IV.
	previous := II.! !
!IV class methodsFor: '--** private fileout/in **--' stamp: 'E 9/1/2022 17:15:49' overrides: 50555134!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := V.
	previous := III.! !
!IX class methodsFor: '--** private fileout/in **--' stamp: 'E 9/1/2022 17:15:49' overrides: 50555134!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := X.
	previous := VIII.! !
!V class methodsFor: '--** private fileout/in **--' stamp: 'E 9/1/2022 17:15:49' overrides: 50555134!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := VI.
	previous := IV.! !
!VI class methodsFor: '--** private fileout/in **--' stamp: 'E 9/1/2022 17:15:49' overrides: 50555134!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := VII.
	previous := V.! !
!VII class methodsFor: '--** private fileout/in **--' stamp: 'E 9/1/2022 17:15:49' overrides: 50555134!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := VIII.
	previous := VI.! !
!VIII class methodsFor: '--** private fileout/in **--' stamp: 'E 9/1/2022 17:15:49' overrides: 50555134!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := IX.
	previous := VII.! !
!X class methodsFor: '--** private fileout/in **--' stamp: 'E 9/1/2022 17:15:49' overrides: 50555134!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := nil.
	previous := IX.! !

!methodRemoval: II class #initializeCollaboratorsFromFile stamp: 'E 9/1/2022 17:15:49'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := III.
	previous := I.!

!methodRemoval: III class #initializeCollaboratorsFromFile stamp: 'E 9/1/2022 17:15:49'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := IV.
	previous := II.!

!methodRemoval: IV class #initializeCollaboratorsFromFile stamp: 'E 9/1/2022 17:15:49'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := V.
	previous := III.!

!methodRemoval: IX class #initializeCollaboratorsFromFile stamp: 'E 9/1/2022 17:15:49'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := X.
	previous := VIII.!

!methodRemoval: V class #initializeCollaboratorsFromFile stamp: 'E 9/1/2022 17:15:49'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := VI.
	previous := IV.!

!methodRemoval: VI class #initializeCollaboratorsFromFile stamp: 'E 9/1/2022 17:15:49'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := VII.
	previous := V.!

!methodRemoval: VII class #initializeCollaboratorsFromFile stamp: 'E 9/1/2022 17:15:49'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := VIII.
	previous := VI.!

!methodRemoval: VIII class #initializeCollaboratorsFromFile stamp: 'E 9/1/2022 17:15:49'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := IX.
	previous := VII.!

!methodRemoval: X class #initializeCollaboratorsFromFile stamp: 'E 9/1/2022 17:15:49'!
initializeCollaboratorsFromFile
	"Auto generated method for loading purposes - Do not modify it"

	next := nil.
	previous := IX.!

X:=10!

X:= OrderedCollection new!

X add: 'Hello'!

X!

X!

X add: 'my name'!

X add: 'my name'!

X!

X remove!

X remove: 'my name'!

X remove: 'my name'!

X remove: 'my name'!

X!

X add: 'my name'!

X!

X add: 'will never change'!

X!

x!

X!

X add: 'Aaaaaa'!

X!

Object name!

Set name!

Set inspect!

Object allInstances!

Object allInstances size!

 8 !

 8 !

Object allInstances !

Set allInstances !

Set allInstances size!

Set CompiledMethod!

CompiledMethod allInstances!

CompiledMethod allInstances size!

Object selector!

Object selectors!

Object selectors size!

Smalltalk!

1 class!

1 class class!

(1 class) class!

(1 class) class class!

(1 class) class class class!

(1 class) class class class class!

(1 class) class class class class!

(1 class) class class class class class!

(1 class) class class class class!

X!

X:=1!

6 timesRepeat:  [X := X class]!

X!

ProtoObject allInstances!

ProtoObject allInstances size!

6 timesRepeat:  [X := X class]!

X Metaclass class !

X Metaclass!

X class!

X class!

X class!

X class!

X class!

II removeAllNext!

!classRemoval: #X stamp: 'E 9/1/2022 19:32:43'!
II subclass: #X
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #IX stamp: 'E 9/1/2022 19:32:44'!
II subclass: #IX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #VIII stamp: 'E 9/1/2022 19:32:44'!
II subclass: #VIII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #VII stamp: 'E 9/1/2022 19:32:44'!
II subclass: #VII
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #VI stamp: 'E 9/1/2022 19:32:44'!
II subclass: #VI
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #V stamp: 'E 9/1/2022 19:32:45'!
II subclass: #V
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #IV stamp: 'E 9/1/2022 19:32:45'!
II subclass: #IV
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

!classRemoval: #III stamp: 'E 9/1/2022 19:32:45'!
II subclass: #III
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'NaturalNumbers'!

5 + 3 == 8!

II:=1!

II:=1!

II:=1!

II!

II new!

Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CuisUniversity'!

!classDefinition: #XXX category: 'CuisUniversity' stamp: 'E 9/1/2022 20:34:14'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CuisUniversity'!

!classRemoval: #XXX stamp: 'E 9/1/2022 20:40:04'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'CuisUniversity'!

Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Exercise'!

!classDefinition: #XXX category: 'Exercise' stamp: 'E 9/1/2022 20:40:10'!
Object subclass: #XXX
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Exercise'!
!XXX methodsFor: 'no messages' stamp: 'E 9/1/2022 20:41:05'!
findsOddsPart0

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds:= OrderedCollection new.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 20:43:17' prior: 50554269!
findsOddsPart0

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds:= OrderedCollection new.
	index:=1.
	
	[index <= elements size]
	whileTrue: [
		((elements at: index) odd) ifTrue: [odds add: (elements at: index)		].
		index := index +1.
		]
	^odds.! !

XXX findsOddsPart0!

XXX findsOddsPart0.!

XXX new findsOddsPart0.!
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 20:46:21' prior: 50554275!
findsOddsPart0

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds:= OrderedCollection new.
	index:=1.
	
	[index <= elements size]
	whileTrue: [
		((elements at: index) odd) ifTrue: [odds add: (elements at: index)		].
		index := index +1.
		].
	^odds.! !

XXX new findsOddsPart0.!
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 20:52:20'!
findsOddsPart1

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds:= OrderedCollection new.
	index:=1.
	
	
	elements do: [:elem | elem odd ifTrue: [odds add: elem]].
	^odds.! !

XXX new findsOddsPart0.!
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 20:53:55' prior: 50554301!
findsOddsPart1

	|elements index odds|
	
	elements := #(1 2 5 6 9).
	
	odds:= OrderedCollection new.
	index:=1.
	
	elements do: [:each | each odd ifTrue: [odds add: each]].
	^odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 20:54:04' prior: 50554311!
findsOddsPart1

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds:= OrderedCollection new.
	
	elements do: [:each | each odd ifTrue: [odds add: each]].
	^odds.! !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:02:12'!
findsOddsPart2

	|elements odds|
	
	elements := #(1 2 5 6 9).
	
	odds:= OrderedCollection new.
	
	odds := elements select: [:each | each odd].
	^odds.! !

XXX new findsOddsPart2.!
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:03:08' prior: 50554328!
findsOddsPart2

	|elements|
	
	elements := #(1 2 5 6 9).
	
	
	
	^elements select: [:each | each odd].! !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:03:12' prior: 50554337!
findsOddsPart2

	|elements|
	
	elements := #(1 2 5 6 9).
	
	^elements select: [:each | each odd].! !

XXX new findsOddsPart2!
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:03:46' prior: 50554343!
findsOddsPart2

	
	
	^ #(1 2 5 6 9) select: [:each | each odd].! !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:03:49' prior: 50554350!
findsOddsPart2

	^ #(1 2 5 6 9) select: [:each | each odd].! !

XXX new findsOddsPart2!

XXX new findsOddsPart2!

XXX new findsOddsPart2!

XXX new findsOddsPart2 + 3 !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:10:58'!
findsDoubles

	^ #(1 2 5 6 9) collect: [:each | each*2 ].! !

XXX new findsDoubles!

#(1 2 5 6 9)*2!
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:15:19'!
findsFirstEven

	^ #(1 2 5 6 9) detect: [:each | each even ].! !

XXX new findsFirstEven !

XXX new findsFirstEven !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:21:14' prior: 50554369!
findsFirstEven

	^ #(1 2 5 6 9) detect: [:each | each even ] ifNone: [self error: 'No hay pares'].! !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:21:27' prior: 50554376!
findsFirstEven

	^ #(1 3 5 7 9) detect: [:each | each even ] ifNone: [self error: 'No hay pares'].! !

XXX new findsFirstEven !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:29:01'!
sumElementsInjecting

	^ #(1 3 5 7 9) detect: [:each | each even ] ifNone: [self error: 'No hay pares'].! !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:29:19' prior: 50554389!
sumElementsInjecting

	^ #(1 3 5 7 9) sum.! !

	^ #(1 3 5 7 9) sum.!
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:29:23' prior: 50554396!
sumElementsInjecting

	^ #(1 3 5 7 9) sum.! !

XXX new sumElementsInjecting !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:31:18' prior: 50554401!
sumElementsInjecting

	^ #(1 3 5 7 9) inject: 0 into: [:each :acc | acc + each].! !

XXX new sumElementsInjecting!
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:31:40' prior: 50554407!
sumElementsInjecting

	^ #(1 3 5 7 9) inject: 0 into: [:acc :each | acc + each].! !
!XXX methodsFor: 'as yet unclassified' stamp: 'E 9/1/2022 21:34:08'!
extractVowels

	^ 'abcdefguijp' select: [:char | char isVowel].! !

XXX new extractVowels !

self!

----STARTUP---- (14 October 2022 14:07:40) as /Users/simonlew/Documents/ISW/mac/CuisUniversity-5466.image!


----End fileIn of /Users/simonlew/Downloads/Portfolio-Ejercicio.st----!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 14:15:50' prior: 50551085!
test07PortfolioDoesNotAddAccountBalanceTwoTimes

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAdd.! !

Object subclass: #FinancialAsset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 14:16:47'!
Object subclass: #FinancialAsset
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialAsset subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 14:17:26'!
FinancialAsset subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'transactions elements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 14:17:52'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'transactions elements'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 14:18:37'!
Object subclass: #AccountTransaction
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 14:18:54'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialAsset methodsFor: 'no messages' stamp: 's 10/14/2022 14:19:50'!
balance

	self subclassResponsibility .! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:20:08'!
hasRegistered

	self subclassResponsibility .! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:20:36'!
hasRegistered: aTransaction

	self subclassResponsibility .! !

!methodRemoval: FinancialAsset #hasRegistered stamp: 's 10/14/2022 14:20:45'!
hasRegistered

	self subclassResponsibility .!
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 14:21:43' prior: 50551353 overrides: 50551486!
hasRegistered: aTransaction 
	^elements anySatisfy: [:element | element hasRegistered: aTransaction ].! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 14:21:56'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'transactions assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:21:56' prior: 50551496 overrides: 50551486!
hasRegistered: aTransaction 
	^assets anySatisfy: [:element | element hasRegistered: aTransaction ].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:21:56' prior: 50551340 overrides: 16920235!
initialize
	assets:= OrderedCollection new.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:21:56' prior: 50551349!
add: anElement 
	^assets add: anElement.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:21:56' prior: 50551344 overrides: 50551477!
balance
	^ assets sum: [:each | each balance] ifEmpty: [0].! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 14:22:59'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:23:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:23:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:23:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:23:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:23:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:23:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioDoesNotAddAccountBalanceTwoTimes stamp: 's 10/14/2022 14:23:12'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioDoesNotAddAccountBalanceTwoTimes stamp: 's 10/14/2022 14:23:12'!
ERROR!
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 14:23:31' prior: 50551511 overrides: 50551486!
hasRegistered: aTransaction 
	^assets anySatisfy: [:asset | asset hasRegistered: aTransaction ].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:23:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:23:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:23:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:23:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:23:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:23:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioDoesNotAddAccountBalanceTwoTimes stamp: 's 10/14/2022 14:23:47'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioDoesNotAddAccountBalanceTwoTimes stamp: 's 10/14/2022 14:23:47'!
ERROR!
!Portfolio class methodsFor: 'no messages' stamp: 's 10/14/2022 14:26:09'!
cannotAddAccountErrorMessage
	^'Cannot add: duplicated account'! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:26:15' prior: 50551604!
cannotAddAccountErrorMessage
	^'Cannot add duplicated account'! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:26:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:26:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:26:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:26:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:26:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:26:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioDoesNotAddAccountBalanceTwoTimes stamp: 's 10/14/2022 14:26:26'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioDoesNotAddAccountBalanceTwoTimes stamp: 's 10/14/2022 14:26:26'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 14:26:48' prior: 50551401!
test07PortfolioDoesNotAddAccountBalanceTwoTimes

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAccountErrorMessage .! !

!testRun: #PortfolioTest #test07PortfolioDoesNotAddAccountBalanceTwoTimes stamp: 's 10/14/2022 14:27:03'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:27:44' prior: 50551523!
add: anElement 
	
	assets add: anElement.! !
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:29:18' prior: 50551661!
add: anAsset
	(assets includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorMessage ].
	assets add: anAsset.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:29:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:29:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:29:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:29:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:29:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:29:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioDoesNotAddAccountBalanceTwoTimes stamp: 's 10/14/2022 14:29:25'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 14:31:26'!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAccountErrorMessage .! !

!methodRemoval: PortfolioTest #test07PortfolioDoesNotAddAccountBalanceTwoTimes stamp: 's 10/14/2022 14:31:27'!
test07PortfolioDoesNotAddAccountBalanceTwoTimes

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAccountErrorMessage .!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 14:34:05'!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	| portfolio1 account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAccountErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 14:34:12' prior: 50551724!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	| portfolio1 account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAccountErrorMessage .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:34:16'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:34:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:34:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:34:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:34:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:34:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 14:34:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 14:34:16'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 14:34:16'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:36:19' prior: 50551665!
add: anAsset
	(assets includes: anAsset) ifTrue: [self error: self class cannotAddAccountErrorMessage ].
	assets add: anAsset.! !
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:36:42'!
canAdd: anAsset

	^ assets includes: anAsset! !
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:36:42' prior: 50551789!
add: anAsset
	(self canAdd: anAsset) ifTrue: [self error: self class cannotAddAccountErrorMessage ].
	assets add: anAsset.! !
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:37:27'!
alreadyContains: anAsset

	^ assets includes: anAsset! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:37:27' prior: 50551800!
add: anAsset
	(self alreadyContains: anAsset) ifTrue: [self error: self class cannotAddAccountErrorMessage ].
	assets add: anAsset.! !

!methodRemoval: Portfolio #canAdd: stamp: 's 10/14/2022 14:37:27'!
canAdd: anAsset

	^ assets includes: anAsset!
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:38:21' prior: 50551806!
alreadyContains: anAsset

	^ assets do: [ :asset| asset alreadyContains: anAsset ].! !
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:38:34' prior: 50551822!
alreadyContains: anAsset

	^ assets do: [ :asset | asset alreadyContains: anAsset ].! !
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:39:40' prior: 50551828!
alreadyContains: anAsset

	^ assets anySatisfy: [ :asset | asset alreadyContains: anAsset ].! !
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:42:06' prior: 50551834!
alreadyContains: anAsset

	^anAsset = self or: [assets anySatisfy: [ :asset | asset alreadyContains: anAsset ]].! !
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:42:32'!
hasAsset: anAsset

	^anAsset = self or: [assets anySatisfy: [ :asset | asset alreadyContains: anAsset ]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:42:32' prior: 50551840!
alreadyContains: anAsset

	^anAsset = self or: [assets anySatisfy: [ :asset | asset hasAsset: anAsset ]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:42:32' prior: 50551811!
add: anAsset
	(self hasAsset: anAsset) ifTrue: [self error: self class cannotAddAccountErrorMessage ].
	assets add: anAsset.! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:42:32' prior: 50551846!
hasAsset: anAsset

	^anAsset = self or: [assets anySatisfy: [ :asset | asset hasAsset: anAsset ]].! !

!methodRemoval: Portfolio #alreadyContains: stamp: 's 10/14/2022 14:42:32'!
alreadyContains: anAsset

	^anAsset = self or: [assets anySatisfy: [ :asset | asset hasAsset: anAsset ]].!
!ReceptiveAccount methodsFor: 'nil' stamp: 's 10/14/2022 14:43:36'!
hasAsset: anAsset

	^anAsset = self .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:43:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:43:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:43:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:43:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:43:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:43:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 14:43:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 14:43:44'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 14:45:51'!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	| portfolio1 account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: portfolio1.
	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAccountErrorMessage .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:45:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:45:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:45:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:45:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:45:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:45:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 14:45:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 14:45:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 14:45:55'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 14:45:55'!
FAILURE!

Object subclass: #FinancialAsset
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 14:47:33'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'parents'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:49:05' prior: 50551860!
add: anAsset
	(self hasAsset: anAsset) ifTrue: [self error: self class cannotAddAccountErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:50:24'!
toBeAddedTo: aParentPortfolio
	parents add: aParentPortfolio .! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 14:52:14' overrides: 16920235!
initialize
	parents := OrderedCollection new.! !
!Portfolio methodsFor: 'initialization' stamp: 's 10/14/2022 14:53:18' prior: 50551518 overrides: 50551992!
initialize
	super initialize.
	assets:= OrderedCollection new.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:53:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:53:25'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:53:25'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:53:25'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:53:25'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:53:25'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 14:53:25'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 14:53:25'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 14:53:25'!
ERROR!
!ReceptiveAccount methodsFor: 'initialization' stamp: 's 10/14/2022 14:53:41' prior: 50551373 overrides: 50551992!
initialize
	super initialize.
	transactions := OrderedCollection new.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:53:49'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:53:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:53:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:53:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:53:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:53:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 14:53:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 14:53:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 14:53:50'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 14:53:50'!
FAILURE!

!methodRemoval: PortfolioTest class #DoIt stamp: 's 10/14/2022 14:54:15'!
DoIt

| portfolio1 portfolio2 account1 account2 account3 |
	
	portfolio1 := Portfolio new.
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	Withdraw register: 80 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: (portfolio2 hasRegistered: (Deposit for: 180))
!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:54:32'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:54:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:54:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:54:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:54:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:54:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 14:54:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 14:54:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 14:54:32'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 14:54:32'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 14:56:45' prior: 50551867!
hasAsset: anAsset

	^anAsset = self or: [assets anySatisfy: [ :asset | asset hasAsset: anAsset ]].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 14:56:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 14:56:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 14:56:51'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 14:56:51'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 14:56:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 14:56:51'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 14:56:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 14:56:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 14:56:51'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 14:56:51'!
FAILURE!
!Portfolio methodsFor: 'nil' stamp: 's 10/14/2022 15:02:24'!
canBeAdded: anAsset
	parents ifEmpty: [^(self hasAsset: anAsset ) not].
	^parents allSatisfy: [:parent| parent canBeAdded: anAsset ].! !
!Portfolio methodsFor: 'adding' stamp: 's 10/14/2022 15:02:47' prior: 50551978!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAccountErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 15:02:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 15:02:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 15:02:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 15:02:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 15:02:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 15:02:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 15:02:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 15:02:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 15:02:50'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 15:06:46'!
test10PortfolioCannotAddAccountIfAlreadyPresentInAnAncestorPortfolio

	| portfolio1 account1 portfolio2 portfolio3 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 add: account1.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio3.
	
	
	self should: 	[portfolio3 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAccountErrorMessage .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 15:06:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 15:06:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 15:06:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 15:06:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 15:06:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 15:06:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 15:06:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 15:06:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 15:06:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 15:06:52'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 15:21:21'!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 |
	
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	
	portfolio1 add: portfolio3.
	portfolio3 add: portfolio4.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio5.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAccountErrorMessage .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 15:21:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 15:21:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 15:21:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 15:21:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 15:21:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 15:21:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 15:21:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 15:21:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 15:21:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddAccountIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 15:21:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 15:21:32'!
PASSED!

!methodRemoval: PortfolioTest #test10PortfolioCannotAddAccountIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 15:21:52'!
test10PortfolioCannotAddAccountIfAlreadyPresentInAnAncestorPortfolio

	| portfolio1 account1 portfolio2 portfolio3 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	
	portfolio1 add: account1.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio3.
	
	
	self should: 	[portfolio3 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAccountErrorMessage .!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 15:22:17'!
cannotAddAssetErrorMessage
	^'Cannot add duplicated account'! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 15:22:17' prior: 50551740!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	| portfolio1 account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 15:22:17' prior: 50551912!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	| portfolio1 account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: portfolio1.
	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 15:22:17' prior: 50552283!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 |
	
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	
	portfolio1 add: portfolio3.
	portfolio3 add: portfolio4.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio5.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 15:22:17' prior: 50551697!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	| portfolio1 account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 15:22:17' prior: 50552186!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.! !

!methodRemoval: Portfolio class #cannotAddAccountErrorMessage stamp: 's 10/14/2022 15:22:17'!
cannotAddAccountErrorMessage
	^'Cannot add duplicated account'!
!Portfolio class methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 15:22:34' prior: 50552364!
cannotAddAssetErrorMessage
	^'Cannot add duplicated asset'! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 15:22:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 15:22:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 15:22:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 15:22:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 15:22:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 15:22:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 15:22:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 15:22:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 15:22:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 15:22:37'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 15:28:53' prior: 50552404!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	| portfolio1 portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6:= Portfolio new.
	
	portfolio6 add: portfolio3.
	portfolio1 add: portfolio3.
	portfolio3 add: portfolio4.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio5.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 15:28:59'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 15:28:59'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 15:28:59'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 15:28:59'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 15:28:59'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 15:28:59'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 15:28:59'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 15:28:59'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 15:28:59'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 15:28:59'!
PASSED!

----SNAPSHOT----(14 October 2022 15:29:14) CuisUniversity-5466.image priorSource: 7018348!

----SNAPSHOT----(14 October 2022 15:44:16) CuisUniversity-5466.image priorSource: 7068873!

----STARTUP---- (14 October 2022 22:31:35) as /Users/simonlew/Documents/ISW/mac/CuisUniversity-5466.image!

!AccountTransaction class methodsFor: 'instance creation' stamp: 's 10/14/2022 22:33:16'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: Deposit class #for: stamp: 's 10/14/2022 22:33:16'!
for: aValue

	^ self new initializeFor: aValue !
!AccountTransaction class methodsFor: 'instance creation' stamp: 's 10/14/2022 22:33:38' prior: 50552563!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: Withdraw class #for: stamp: 's 10/14/2022 22:33:38'!
for: aValue

	^ self new initializeFor: aValue !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 22:33:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 22:33:46'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:37:23' overrides: 16961394!
setUp
	| account |
	
	account := ReceptiveAccount new.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 22:37:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:37:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:37:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 22:37:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 22:37:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 22:37:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 22:37:42'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 22:40:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:40:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:40:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 22:40:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 22:40:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 22:40:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 22:40:39'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:45:39' prior: 50551141!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	

	| account |
	self assert: 0 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:46:37' prior: 50552645 overrides: 16961394!
setUp
	| accounta |
	
	accounta := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:46:59' prior: 50552703!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	

	| accountt |
	self assert: 0 equals: accountt balance.
! !
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:47:39' prior: 50552710 overrides: 16961394!
setUp
	| account |
	
	account := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:49:20' prior: 50552723 overrides: 16961394!
setUp

	| account |
	
	account := ReceptiveAccount new.! !

ReceptiveAccountTest setUp!

ReceptiveAccountTest new setUp!

ReceptiveAccountTest new setUp!

ReceptiveAccountTest new setUp!
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:53:39' prior: 50552729 overrides: 16961394!
setUp

	| account |
	
	account := ReceptiveAccount new.
	account balance .! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 22:54:00'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:54:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:54:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 22:54:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 22:54:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 22:54:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 22:54:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 22:54:00'!
ERROR!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:56:04' prior: 50552715!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	self assert: 0 equals: account balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 22:56:09'!
ERROR!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:56:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:56:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 22:56:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 22:56:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 22:56:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 22:56:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 22:56:09'!
ERROR!
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:56:45' prior: 50552739 overrides: 16961394!
setUp

	| account |
	
	account := ReceptiveAccount new.! !

TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 22:58:34' prior: 50552813 overrides: 16961394!
setUp

	 
	
	accountt := ReceptiveAccount new.! !

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 22:58:34'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: 'accountt'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:58:43' prior: 50552824 overrides: 16961394!
setUp

	 
	
	accountt := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:58:57' prior: 50552775!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	
	self assert: 0 equals: accountt balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 22:59:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:59:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:59:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 22:59:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 22:59:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 22:59:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 22:59:01'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:59:26' prior: 50551148!
test02DepositIncreasesBalanceOnTransactionValue 

	
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
		
	self assert: 100 equals: accountt balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 22:59:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:59:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 22:59:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 22:59:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 22:59:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 22:59:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 22:59:37'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:59:50' prior: 50552876!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: accountt.
		
	self assert: 100 equals: accountt balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:00:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:00:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:00:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:00:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:00:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:00:09'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:00:09'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:00:47' prior: 50551157!
test03WithdrawDecreasesBalanceOnTransactionValue 

	Deposit register: 100 on: accountt.
	Withdraw register: 50 on: accountt.
		
	self assert: 50 equals: accountt balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:00:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:00:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:00:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:00:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:00:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:00:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:00:50'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:00:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:00:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:00:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:00:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:00:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:00:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:00:52'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:01:10' prior: 50551167!
test04WithdrawValueMustBePositive 

	| withdrawValue |
	
	
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: accountt) value
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:01:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:01:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:01:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:01:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:01:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:01:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:01:17'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:01:38' prior: 50551177!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: accountt.
	withdraw := Withdraw register: 50 on: accountt.
		
	self assert: (accountt hasRegistered: deposit).
	self assert: (accountt hasRegistered: withdraw).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:01:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:01:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:01:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:01:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:01:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:01:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:01:45'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:02:04' prior: 50551190!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (accountt hasRegistered: deposit).
	self deny: (accountt hasRegistered:withdraw).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:02:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:02:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:02:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:02:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:02:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:02:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:02:10'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:02:30' prior: 50551202!
test07AccountKnowsItsTransactions 

	| deposit1 |
	
	accountt := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: accountt.
		
	self assert: 1 equals: accountt transactions size.
	self assert: (accountt transactions includes: deposit1).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:02:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:02:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:02:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:02:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:02:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:02:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:02:36'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:03:27' prior: 50553041!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	deposit := Deposit register: 100 on: accountt.
	withdraw := Withdraw register: 50 on: accountt.
		
	self assert: (accountt hasRegistered: deposit).
	self assert: (accountt hasRegistered: withdraw).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:03:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:03:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:03:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:03:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:03:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:03:32'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:03:32'!
PASSED!

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 23:03:43'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50552911!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50553118!
test07AccountKnowsItsTransactions 

	| deposit1 |
	
	account := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: account.
		
	self assert: 1 equals: account transactions size.
	self assert: (account transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50553081!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50553156!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50553006!
test04WithdrawValueMustBePositive 

	| withdrawValue |
	
	
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50552838 overrides: 16961394!
setUp

	 
	
	account := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50552843!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	
	self assert: 0 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50552945!
test03WithdrawDecreasesBalanceOnTransactionValue 

	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:04:30'!
m1

	^ self assert: 100 equals: account balance! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:04:30' prior: 50553203!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self m1.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:04:30' prior: 50553281!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self m1.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:03:43' prior: 50553288!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:06:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:07:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:07:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:07:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:07:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:07:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:07:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:07:41'!
PASSED!

!methodRemoval: ReceptiveAccountTest #m1 stamp: 's 10/14/2022 23:08:36'!
m1

	^ self assert: 100 equals: account balance!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:08:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:08:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:08:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:08:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:08:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:08:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:08:41'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:09:07' prior: 50553261!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| value |
	value:=0.
	self assert: value equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:09:56'!
assertAccountBalanceIs: value

	^ self assert: value equals: account balance! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:09:56' prior: 50553385!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| value |
	value:=0.
	self assertAccountBalanceIs: value.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:10:54' prior: 50553398!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	self assertAccountBalanceIs: 0.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:10:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:10:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:10:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:10:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:10:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:10:57'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:10:57'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:11:30' prior: 50553295!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self assertAccountBalanceIs: 100.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:11:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:11:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:11:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:11:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:11:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:11:34'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:11:34'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:20'!
deposit100

	^ Deposit register: 100 on: account! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:20' prior: 50553268!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:20' prior: 50553234!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	deposit := self deposit100.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:20' prior: 50553437!
test02DepositIncreasesBalanceOnTransactionValue 

	
	self deposit100.
		
	self assertAccountBalanceIs: 100.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:37' prior: 50553475!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100.
	Withdraw register: 50 on: account.
		
	self assertAccountBalanceIs: 50.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:14:17'!
withdraw: withdrawValue

	^ Withdraw register: withdrawValue on: account! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:14:17' prior: 50553246!
test04WithdrawValueMustBePositive 

	| withdrawValue |
	
	
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (self withdraw: withdrawValue) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:14:46' prior: 50553501!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100.
	self withdraw: 50 .
		
	self assertAccountBalanceIs: 50.
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:14:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:14:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:14:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:14:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:14:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:14:51'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:14:51'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:15:38'!
withdraw50

	^ self withdraw: 50! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:15:38' prior: 50553522!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100.
	self withdraw50 .
		
	self assertAccountBalanceIs: 50.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:17:55' prior: 50553514!
test04WithdrawValueMustBePositive 
	
	self assert: 50 equals: (self withdraw50) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:18:09' prior: 50553483!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	deposit := self deposit100.
	withdraw := self withdraw50 .
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:18:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:18:13'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:18:49' prior: 50553572!
test05ReceptiveAccountKnowsRegisteredTransactions 

		
	self assert: (account hasRegistered: self deposit100).
	self assert: (account hasRegistered: self withdraw50).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:18:55'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:18:55'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:19:27' prior: 50553223!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit |
	
	deposit :=  Deposit for: 200.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered: self withdraw50 ).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:19:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:19:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:19:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:19:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:19:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:19:33'!
FAILURE!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:19:33'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:19:33'!
FAILURE!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:20:10' prior: 50553644!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered: withdraw).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:20:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:20:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:20:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:20:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:20:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:20:21'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:20:21'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:21:04' prior: 50553211!
test07AccountKnowsItsTransactions 

	| deposit1 |
	
	account := ReceptiveAccount new.
	
	deposit1 := self deposit100.
		
	self assert: 1 equals: account transactions size.
	self assert: (account transactions includes: deposit1).
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:21:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:21:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:21:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:21:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:21:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:21:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:21:07'!
PASSED!
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/14/2022 23:22:32' overrides: 16961394!
setUp
	! !

TestCase subclass: #PortfolioTest
	instanceVariableNames: 'p1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 23:23:05'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'p1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/14/2022 23:23:15' prior: 50553758 overrides: 16961394!
setUp
	
	p1 := Portfolio new.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:23:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:23:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:23:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:23:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:23:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:23:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:23:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:23:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:23:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:23:19'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:23:59' prior: 50550992!
test01EmptyPortfolioHasZeroBalanceWhenCreated

	
	p1 := Portfolio new.
		
	self assert: 0 equals: p1 balance. 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:24:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:24:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:24:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:24:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:24:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:24:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:24:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:24:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:24:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:24:03'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:24:21' prior: 50553816!
test01EmptyPortfolioHasZeroBalanceWhenCreated

	
	self assert: 0 equals: p1 balance. 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:24:25'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:24:25'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:24:25'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:24:25'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:24:25'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:24:25'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:24:25'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:24:25'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:24:25'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:24:25'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:24:40' prior: 50550999!
test02PortfolioBalanceIncreasesWithOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	p1 add: account.
		
	self assert: 100 equals: p1 balance. 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:24:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:24:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:24:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:24:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:24:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:24:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:24:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:24:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:24:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:24:45'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:25:12' prior: 50551010!
test03PortfolioBalanceWithMultipleAccounts

	|  account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	p1 add: account1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: p1 balance. 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:25:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:25:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:25:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:25:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:25:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:25:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:25:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:25:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:25:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:25:22'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:25:48' prior: 50551027!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2 account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	p1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: p1.
	
	self assert: 180 equals: portfolio2 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:26:18' prior: 50551047!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account1 account2 account3 deposit |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	p1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 add: deposit.
	
	portfolio2 add: account3; add: p1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:26:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:26:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:26:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:26:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:26:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:26:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:26:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:26:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:26:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:26:22'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:26:46' prior: 50551067!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2 account1 account2 deposit |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	p1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: p1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:26:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:26:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:26:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:26:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:26:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:26:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:26:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:26:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:26:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:26:50'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:27:08' prior: 50552424!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	|  account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	p1 := Portfolio new.
	p1 add: account1.

	
	self should: 	[p1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:27:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:27:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:27:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:27:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:27:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:27:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:27:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:27:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:27:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:27:15'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:27:33' prior: 50552370!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	p1 := Portfolio new.
	p1 add: account1.
	portfolio2 := Portfolio new.
	portfolio2 add: p1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:27:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:27:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:27:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:27:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:27:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:27:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:27:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:27:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:27:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:27:37'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:27:56' prior: 50552387!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	p1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: p1.
	
	self should: 	[p1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:27:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:27:57'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:28:18' prior: 50552494!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	|  portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	
	p1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6:= Portfolio new.
	
	portfolio6 add: portfolio3.
	p1 add: portfolio3.
	portfolio3 add: portfolio4.
	p1 add: portfolio2.
	portfolio2 add: portfolio5.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:28:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:28:19'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 23:28:46'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50554023!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account1 account2 account3 deposit |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 add: deposit.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50553774 overrides: 16961394!
setUp
	
	portfolio1 := Portfolio new.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50554294!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	|  portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6:= Portfolio new.
	
	portfolio6 add: portfolio3.
	portfolio1 add: portfolio3.
	portfolio3 add: portfolio4.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio5.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50554184!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50554080!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2 account1 account2 deposit |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50554134!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	|  account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50553904!
test02PortfolioBalanceIncreasesWithOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: 100 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50553951!
test03PortfolioBalanceWithMultipleAccounts

	|  account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add: account1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50554005!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2 account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50554237!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: portfolio1.
	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50553860!
test01EmptyPortfolioHasZeroBalanceWhenCreated

	
	self assert: 0 equals: portfolio1 balance. 
! !
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(assets _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (32 to: 37)
		declaredAt: (32 to: 37).! !
!Behavior method!
initialize
	(parents _ [
	(OrderedCollection
		cover: (24 to: 40)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 19)
		declaredAt: (13 to: 19).! !
!Behavior method!
balance
	^ [
	(assets
		cover: (12 to: 17)
		declaredAt: (12 to: 17))
		sum: [ :each |
			[
			(each
				cover: (33 to: 36)
				declaredAt: (26 to: 29)) balance ] valueCoveringAll:
				{38 to: 44} ]
		ifEmpty: [
			0 coverAll:
				{57 to: 57} ]] valueCoveringAll:
		{19 to: 22. 47 to: 54}.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:29:01'!
PASSED!
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(transactions _ [
	(OrderedCollection
		cover: (48 to: 64)
		declaredAt: (48 to: 64)) new ] valueCoveringAll:
		{66 to: 68})
		cover: (32 to: 43)
		declaredAt: (32 to: 43).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) add:
		(transaction
			cover: (98 to: 108)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 96}.
	^ transaction
		cover: (117 to: 127)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
add: aTransaction
	[
	(transactions
		cover: (21 to: 32)
		declaredAt: (21 to: 32)) add:
		(aTransaction
			cover: (39 to: 50)
			declaredAt: (6 to: 17)) ] valueCoveringAll:
		{34 to: 37}.! !
!Behavior method!
add: anAsset
	[
	([
	(self coverAll:
		{16 to: 19}) canBeAdded:
		(anAsset
			cover: (33 to: 39)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{21 to: 31}) ifFalse: [
		[
		(self coverAll:
			{52 to: 55}) error:
			([
			([
			(self coverAll:
				{64 to: 67}) class ] valueCoveringAll:
				{69 to: 73}) cannotAddAssetErrorMessage ] valueCoveringAll:
				{75 to: 100}) ] valueCoveringAll:
			{57 to: 62} ]] valueCoveringAll:
		{42 to: 49}.
	[
	(anAsset
		cover: (106 to: 112)
		declaredAt: (6 to: 12)) toBeAddedTo:
		(self coverAll:
			{127 to: 130}) ] valueCoveringAll:
		{114 to: 125}.
	[
	(assets
		cover: (134 to: 139)
		declaredAt: (134 to: 139)) add:
		(anAsset
			cover: (146 to: 152)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{141 to: 144}.! !
!Behavior method!
canBeAdded: anAsset
	[
	(parents
		cover: (22 to: 28)
		declaredAt: (22 to: 28)) ifEmpty: [ ^ [
		([
		(self coverAll:
			{42 to: 45}) hasAsset:
			(anAsset
				cover: (57 to: 63)
				declaredAt: (13 to: 19)) ] valueCoveringAll:
			{47 to: 55}) not ] valueCoveringAll:
			{67 to: 69} ]] valueCoveringAll:
		{30 to: 37}.
	^ [
	(parents
		cover: (75 to: 81)
		declaredAt: (22 to: 28)) allSatisfy: [ :parent |
		[
		(parent
			cover: (105 to: 110)
			declaredAt: (97 to: 102)) canBeAdded:
			(anAsset
				cover: (124 to: 130)
				declaredAt: (13 to: 19)) ] valueCoveringAll:
			{112 to: 122} ]] valueCoveringAll:
		{83 to: 93}.! !
!Behavior method!
hasAsset: anAsset
	^ [
	([
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}) or: [
		[
		(assets
			cover: (42 to: 47)
			declaredAt: (42 to: 47)) anySatisfy: [ :asset |
			[
			(asset
				cover: (72 to: 76)
				declaredAt: (64 to: 68)) hasAsset:
				(anAsset
					cover: (88 to: 94)
					declaredAt: (11 to: 17)) ] valueCoveringAll:
				{78 to: 86} ]] valueCoveringAll:
			{49 to: 59} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
toBeAddedTo: aParentPortfolio
	[
	(parents
		cover: (32 to: 38)
		declaredAt: (32 to: 38)) add:
		(aParentPortfolio
			cover: (45 to: 60)
			declaredAt: (14 to: 29)) ] valueCoveringAll:
		{40 to: 43}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :acc :transaction |
			[
			(transaction
				cover: (63 to: 73)
				declaredAt: (48 to: 58)) addTransactionMarketValue:
				(acc
					cover: (102 to: 104)
					declaredAt: (43 to: 45)) ] valueCoveringAll:
				{75 to: 100} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) +
		(value
			cover: (58 to: 62)
			declaredAt: (58 to: 62)) ] valueCoveringAll:
		{56 to: 56}.! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:29:01'!
PASSED!
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
hasAsset: anAsset
	^ [
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) -
		(value
			cover: (58 to: 62)
			declaredAt: (58 to: 62)) ] valueCoveringAll:
		{56 to: 56}.! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:29:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:29:01'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(assets
		cover: (32 to: 37)
		declaredAt: (32 to: 37)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasRegistered:
			(aTransaction
				cover: (82 to: 93)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{67 to: 80} ]] valueCoveringAll:
		{39 to: 49}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:29:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:29:01'!
PASSED!
!Behavior method!
cannotAddAssetErrorMessage
	^ 'Cannot add duplicated asset' coverAll:
		{30 to: 58}.! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:29:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:29:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:29:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:29:01'!
PASSED!
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(assets _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (32 to: 37)
		declaredAt: (32 to: 37).! !
!Behavior method!
initialize
	(parents _ [
	(OrderedCollection
		cover: (24 to: 40)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 19)
		declaredAt: (13 to: 19).! !
!Behavior method!
balance
	^ [
	(assets
		cover: (12 to: 17)
		declaredAt: (12 to: 17))
		sum: [ :each |
			[
			(each
				cover: (33 to: 36)
				declaredAt: (26 to: 29)) balance ] valueCoveringAll:
				{38 to: 44} ]
		ifEmpty: [
			0 coverAll:
				{57 to: 57} ]] valueCoveringAll:
		{19 to: 22. 47 to: 54}.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:30:01'!
PASSED!
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(transactions _ [
	(OrderedCollection
		cover: (48 to: 64)
		declaredAt: (48 to: 64)) new ] valueCoveringAll:
		{66 to: 68})
		cover: (32 to: 43)
		declaredAt: (32 to: 43).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) add:
		(transaction
			cover: (98 to: 108)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 96}.
	^ transaction
		cover: (117 to: 127)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
add: aTransaction
	[
	(transactions
		cover: (21 to: 32)
		declaredAt: (21 to: 32)) add:
		(aTransaction
			cover: (39 to: 50)
			declaredAt: (6 to: 17)) ] valueCoveringAll:
		{34 to: 37}.! !
!Behavior method!
add: anAsset
	[
	([
	(self coverAll:
		{16 to: 19}) canBeAdded:
		(anAsset
			cover: (33 to: 39)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{21 to: 31}) ifFalse: [
		[
		(self coverAll:
			{52 to: 55}) error:
			([
			([
			(self coverAll:
				{64 to: 67}) class ] valueCoveringAll:
				{69 to: 73}) cannotAddAssetErrorMessage ] valueCoveringAll:
				{75 to: 100}) ] valueCoveringAll:
			{57 to: 62} ]] valueCoveringAll:
		{42 to: 49}.
	[
	(anAsset
		cover: (106 to: 112)
		declaredAt: (6 to: 12)) toBeAddedTo:
		(self coverAll:
			{127 to: 130}) ] valueCoveringAll:
		{114 to: 125}.
	[
	(assets
		cover: (134 to: 139)
		declaredAt: (134 to: 139)) add:
		(anAsset
			cover: (146 to: 152)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{141 to: 144}.! !
!Behavior method!
canBeAdded: anAsset
	[
	(parents
		cover: (22 to: 28)
		declaredAt: (22 to: 28)) ifEmpty: [ ^ [
		([
		(self coverAll:
			{42 to: 45}) hasAsset:
			(anAsset
				cover: (57 to: 63)
				declaredAt: (13 to: 19)) ] valueCoveringAll:
			{47 to: 55}) not ] valueCoveringAll:
			{67 to: 69} ]] valueCoveringAll:
		{30 to: 37}.
	^ [
	(parents
		cover: (75 to: 81)
		declaredAt: (22 to: 28)) allSatisfy: [ :parent |
		[
		(parent
			cover: (105 to: 110)
			declaredAt: (97 to: 102)) canBeAdded:
			(anAsset
				cover: (124 to: 130)
				declaredAt: (13 to: 19)) ] valueCoveringAll:
			{112 to: 122} ]] valueCoveringAll:
		{83 to: 93}.! !
!Behavior method!
hasAsset: anAsset
	^ [
	([
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}) or: [
		[
		(assets
			cover: (42 to: 47)
			declaredAt: (42 to: 47)) anySatisfy: [ :asset |
			[
			(asset
				cover: (72 to: 76)
				declaredAt: (64 to: 68)) hasAsset:
				(anAsset
					cover: (88 to: 94)
					declaredAt: (11 to: 17)) ] valueCoveringAll:
				{78 to: 86} ]] valueCoveringAll:
			{49 to: 59} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
toBeAddedTo: aParentPortfolio
	[
	(parents
		cover: (32 to: 38)
		declaredAt: (32 to: 38)) add:
		(aParentPortfolio
			cover: (45 to: 60)
			declaredAt: (14 to: 29)) ] valueCoveringAll:
		{40 to: 43}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :acc :transaction |
			[
			(transaction
				cover: (63 to: 73)
				declaredAt: (48 to: 58)) addTransactionMarketValue:
				(acc
					cover: (102 to: 104)
					declaredAt: (43 to: 45)) ] valueCoveringAll:
				{75 to: 100} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) +
		(value
			cover: (58 to: 62)
			declaredAt: (58 to: 62)) ] valueCoveringAll:
		{56 to: 56}.! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:30:01'!
PASSED!
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
hasAsset: anAsset
	^ [
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) -
		(value
			cover: (58 to: 62)
			declaredAt: (58 to: 62)) ] valueCoveringAll:
		{56 to: 56}.! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:30:01'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(assets
		cover: (32 to: 37)
		declaredAt: (32 to: 37)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasRegistered:
			(aTransaction
				cover: (82 to: 93)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{67 to: 80} ]] valueCoveringAll:
		{39 to: 49}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:30:01'!
PASSED!
!Behavior method!
cannotAddAssetErrorMessage
	^ 'Cannot add duplicated asset' coverAll:
		{30 to: 58}.! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:30:01'!
PASSED!
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:30:01'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:30:01'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:30:01'!
PASSED!

Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 23:33:49'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 23:33:49'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 's 10/14/2022 23:33:49'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountTransaction methodsFor: 'value' stamp: 's 10/14/2022 23:34:06' prior: 50551226 overrides: 16902254!
value

	^value.! !

!methodRemoval: Withdraw #value stamp: 's 10/14/2022 23:34:06'!
value

	^value.!
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(assets _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (32 to: 37)
		declaredAt: (32 to: 37).! !
!Behavior method!
initialize
	(parents _ [
	(OrderedCollection
		cover: (24 to: 40)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 19)
		declaredAt: (13 to: 19).! !
!Behavior method!
balance
	^ [
	(assets
		cover: (12 to: 17)
		declaredAt: (12 to: 17))
		sum: [ :each |
			[
			(each
				cover: (33 to: 36)
				declaredAt: (26 to: 29)) balance ] valueCoveringAll:
				{38 to: 44} ]
		ifEmpty: [
			0 coverAll:
				{57 to: 57} ]] valueCoveringAll:
		{19 to: 22. 47 to: 54}.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:34:14'!
PASSED!
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(transactions _ [
	(OrderedCollection
		cover: (48 to: 64)
		declaredAt: (48 to: 64)) new ] valueCoveringAll:
		{66 to: 68})
		cover: (32 to: 43)
		declaredAt: (32 to: 43).! !
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) add:
		(transaction
			cover: (98 to: 108)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 96}.
	^ transaction
		cover: (117 to: 127)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
add: aTransaction
	[
	(transactions
		cover: (21 to: 32)
		declaredAt: (21 to: 32)) add:
		(aTransaction
			cover: (39 to: 50)
			declaredAt: (6 to: 17)) ] valueCoveringAll:
		{34 to: 37}.! !
!Behavior method!
add: anAsset
	[
	([
	(self coverAll:
		{16 to: 19}) canBeAdded:
		(anAsset
			cover: (33 to: 39)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{21 to: 31}) ifFalse: [
		[
		(self coverAll:
			{52 to: 55}) error:
			([
			([
			(self coverAll:
				{64 to: 67}) class ] valueCoveringAll:
				{69 to: 73}) cannotAddAssetErrorMessage ] valueCoveringAll:
				{75 to: 100}) ] valueCoveringAll:
			{57 to: 62} ]] valueCoveringAll:
		{42 to: 49}.
	[
	(anAsset
		cover: (106 to: 112)
		declaredAt: (6 to: 12)) toBeAddedTo:
		(self coverAll:
			{127 to: 130}) ] valueCoveringAll:
		{114 to: 125}.
	[
	(assets
		cover: (134 to: 139)
		declaredAt: (134 to: 139)) add:
		(anAsset
			cover: (146 to: 152)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{141 to: 144}.! !
!Behavior method!
canBeAdded: anAsset
	[
	(parents
		cover: (22 to: 28)
		declaredAt: (22 to: 28)) ifEmpty: [ ^ [
		([
		(self coverAll:
			{42 to: 45}) hasAsset:
			(anAsset
				cover: (57 to: 63)
				declaredAt: (13 to: 19)) ] valueCoveringAll:
			{47 to: 55}) not ] valueCoveringAll:
			{67 to: 69} ]] valueCoveringAll:
		{30 to: 37}.
	^ [
	(parents
		cover: (75 to: 81)
		declaredAt: (22 to: 28)) allSatisfy: [ :parent |
		[
		(parent
			cover: (105 to: 110)
			declaredAt: (97 to: 102)) canBeAdded:
			(anAsset
				cover: (124 to: 130)
				declaredAt: (13 to: 19)) ] valueCoveringAll:
			{112 to: 122} ]] valueCoveringAll:
		{83 to: 93}.! !
!Behavior method!
hasAsset: anAsset
	^ [
	([
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}) or: [
		[
		(assets
			cover: (42 to: 47)
			declaredAt: (42 to: 47)) anySatisfy: [ :asset |
			[
			(asset
				cover: (72 to: 76)
				declaredAt: (64 to: 68)) hasAsset:
				(anAsset
					cover: (88 to: 94)
					declaredAt: (11 to: 17)) ] valueCoveringAll:
				{78 to: 86} ]] valueCoveringAll:
			{49 to: 59} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
toBeAddedTo: aParentPortfolio
	[
	(parents
		cover: (32 to: 38)
		declaredAt: (32 to: 38)) add:
		(aParentPortfolio
			cover: (45 to: 60)
			declaredAt: (14 to: 29)) ] valueCoveringAll:
		{40 to: 43}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :acc :transaction |
			[
			(transaction
				cover: (63 to: 73)
				declaredAt: (48 to: 58)) addTransactionMarketValue:
				(acc
					cover: (102 to: 104)
					declaredAt: (43 to: 45)) ] valueCoveringAll:
				{75 to: 100} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) +
		(value
			cover: (58 to: 62)
			declaredAt: (58 to: 62)) ] valueCoveringAll:
		{56 to: 56}.! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:34:14'!
PASSED!
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
hasAsset: anAsset
	^ [
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) -
		(value
			cover: (58 to: 62)
			declaredAt: (58 to: 62)) ] valueCoveringAll:
		{56 to: 56}.! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:34:14'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(assets
		cover: (32 to: 37)
		declaredAt: (32 to: 37)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasRegistered:
			(aTransaction
				cover: (82 to: 93)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{67 to: 80} ]] valueCoveringAll:
		{39 to: 49}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:34:14'!
PASSED!
!Behavior method!
cannotAddAssetErrorMessage
	^ 'Cannot add duplicated asset' coverAll:
		{30 to: 58}.! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:34:14'!
PASSED!
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:34:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:34:14'!
PASSED!
!Behavior method!
transactions
	^ [
	(transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30)) copy ] valueCoveringAll:
		{32 to: 35}.! !

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:34:14'!
PASSED!
!Deposit methodsFor: 'account actions' stamp: 's 10/14/2022 23:37:49' prior: 50551271 overrides: 50551230!
addTransactionMarketValue: aMarketValue
	^aMarketValue + self value.! !
!Withdraw methodsFor: 'account actions' stamp: 's 10/14/2022 23:37:57' prior: 50551309 overrides: 50551230!
addTransactionMarketValue: aMarketValue
	^aMarketValue - self value.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/14/2022 23:38:06'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/14/2022 23:38:06'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:43:43'!
test11EmptyPortfolioHasEmptyTransactions

	
	self assert:  portfolio1 transactions isEmpty . 
! !

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/14/2022 23:43:55'!
ERROR!
!FinancialAsset methodsFor: 'accessing' stamp: 's 10/14/2022 23:44:14'!
transactions
	self shouldBeImplemented.! !
!FinancialAsset methodsFor: 'accessing' stamp: 's 10/14/2022 23:44:26' prior: 50555440!
transactions
	self subclassResponsibility .! !

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/14/2022 23:44:32'!
ERROR!
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:44:45' overrides: 50555445!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:46:35' prior: 50555453 overrides: 50555445!
transactions
	^OrderedCollection new! !

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:46:38'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/14/2022 23:46:38'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:49:16'!
test12PortfolioHasTheTransactionsOfOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self deny: portfolio1 transactions isEmpty. 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/14/2022 23:49:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:49:36'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:49:36'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:49:58'!
PASSED!
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:53:31' prior: 50555458 overrides: 50555445!
transactions
	^ assets inject: (OrderedCollection new) into:
	[ 
		:asset :transactions|
		transactions add: asset transactions.
	
	]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/14/2022 23:53:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:53:42'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:53:42'!
ERROR!
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:54:23' prior: 50555568 overrides: 50555445!
transactions
	^ assets inject: (OrderedCollection new) into:
	[ 
		:asset :transactions|
		transactions add: (asset transactions).
	
	]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/14/2022 23:54:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:54:30'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:54:30'!
ERROR!
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:55:40' prior: 50555624 overrides: 50555445!
transactions
	^ assets inject: (OrderedCollection new) into:
	[ 
	 :transactions :asset|
		transactions add: (asset transactions).
	
	]! !

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:55:42'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/14/2022 23:55:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:55:46'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:57:21' prior: 50555506!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: portfolio1 transactions equals: #(deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:57:42' prior: 50555736!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: portfolio1 transactions equals: deposit. 
! !

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/14/2022 23:57:44'!
FAILURE!

FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'accesing' stamp: 's 10/15/2022 00:00:27' prior: 50555680 overrides: 50555445!
transactions
	.! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:02:06' prior: 50555747!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: portfolio1 transactions equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:02:08'!
FAILURE!
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:55:40' prior: 50555767 overrides: 50555445!
transactions
	^ assets inject: (OrderedCollection new) into:
	[ 
	 :transactions :asset|
		transactions add: (asset transactions).
	
	]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:03:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:03:00'!
PASSED!
!Portfolio methodsFor: 'accesing' stamp: 's 10/15/2022 00:03:14' prior: 50555787 overrides: 50555445!
transactions
	.! !

FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:03:42'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'accesing' stamp: 's 10/15/2022 00:03:53' prior: 50555866 overrides: 50555445!
transactions
	^transactions.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:04:03'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:04:03'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:04:03'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:04:03'!
PASSED!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:05:01'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:05:01'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'parents assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:05:45'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:05:45'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:05:45'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'parents assets transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

Object subclass: #FinancialAsset
	instanceVariableNames: 'parents transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:06:00'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'parents transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:06:09'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:06:14'!
ERROR!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:06:14'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:06:14'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:06:14'!
PASSED!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:06:42' prior: 50551992 overrides: 16920235!
initialize
	parents := OrderedCollection new.
	transactions := OrderedCollection new.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:07:12'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:07:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:07:12'!
FAILURE!

!methodRemoval: ReceptiveAccount #initialize stamp: 's 10/15/2022 00:07:41'!
initialize
	super initialize.
	transactions := OrderedCollection new.!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:07:45'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:07:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:07:45'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:08:52' prior: 50552438!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	transactions add: anAsset transactions.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:09:22'!
FAILURE!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:09:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:09:22'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:10:09'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:10:49' prior: 50555771!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:10:50'!
FAILURE!

(portfolio1 transactions)!
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:11:55' prior: 50556254!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	transactions add: (anAsset transactions).! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:11:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:11:57'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:11:57'!
FAILURE!

portfolio1 transactions!
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:13:45' prior: 50556357!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	transactions addAll: (anAsset transactions).! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:13:46'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:13:46'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 's 10/15/2022 00:14:07' prior: 50551383 overrides: 50555445!
transactions 

	^ transactions.! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:14:15'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:14:15'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:14:21'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:14:39'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:14:39'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:15:14'!
test12PortfolioHasTheTransactionsOfDirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !

!methodRemoval: PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:15:14'!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:15:32'!
test12PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:15:42'!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !

!methodRemoval: PortfolioTest #test12PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:15:42'!
test12PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:16:24'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'portfolio1 p2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/15/2022 00:16:22' prior: 50554386 overrides: 16961394!
setUp
	
	portfolio1 := Portfolio new.
	p2 := Portfolio new.! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:17:06' prior: 50556649!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:17:32'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:17:32'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:17:46' prior: 50556686!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:17:50'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:17:50'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:17:50'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:18:20' prior: 50556747!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	
	portfolio1 add: account.
		p2 add: portfolio1 .
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:18:21'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:18:21'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:18:25' prior: 50556811!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:18:28'!
FAILURE!
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:23:21' prior: 50556415!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	parents do:[:parent | parent addTransactions: anAsset transactions].
	transactions addAll: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:24:50' prior: 50556891!
add: aTransaction

	transactions add: aTransaction 
! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:23:21' prior: 50556903!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	parents do:[:parent | parent addTransactions: anAsset transactions].
	transactions addAll: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:25:26'!
addTransaction: aTransaction

	transactions add: aTransaction 
! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:26:25' prior: 50556908!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	self addTransactions: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:26:43'!
addTransactions: aTransaction

	transactions add: aTransaction 
! !

!methodRemoval: Portfolio #addTransaction: stamp: 's 10/15/2022 00:26:43'!
addTransaction: aTransaction

	transactions add: aTransaction 
!
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:27:50' prior: 50556933!
addTransactions: someTransactions

	parents do:[:parent | parent addTransactions: someTransactions].
	transactions addAll: someTransactions.
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:27:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:27:58'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 's 10/15/2022 00:29:29'!
addTransaction: aTransaction

	transactions add: aTransaction 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50554413!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 addTransaction: account1.
	portfolio2 := Portfolio new.
	portfolio2 addTransaction: portfolio1.

	
	self should: 	[portfolio2 addTransaction: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50554506!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 addTransaction: account1.
	portfolio2 addTransaction: portfolio1.
	
	self should: 	[portfolio1 addTransaction: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!AccountTransaction class methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50551244!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account addTransaction: transaction.
		
	^ transaction! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50551986!
toBeAddedTo: aParentPortfolio
	parents addTransaction: aParentPortfolio .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50556924!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets addTransaction: anAsset.
	self addTransactions: (anAsset transactions).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50554446!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	|  account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 addTransaction: account1.

	
	self should: 	[portfolio1 addTransaction: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50554470!
test03PortfolioBalanceWithMultipleAccounts

	|  account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 addTransaction: account1; 
			addTransaction: account2;
			addTransaction: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50554391!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	|  portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6:= Portfolio new.
	
	portfolio6 addTransaction: portfolio3.
	portfolio1 addTransaction: portfolio3.
	portfolio3 addTransaction: portfolio4.
	portfolio1 addTransaction: portfolio2.
	portfolio2 addTransaction: portfolio5.
	
	
	self should: 	[portfolio4 addTransaction: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50554429!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2 account1 account2 deposit |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 addTransaction: account1; 
			addTransaction: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 addTransaction: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50556875!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 addTransaction: portfolio1 .
	portfolio1 addTransaction: account.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50556615!
test12PortfolioHasTheTransactionsOfDirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 addTransaction: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50554460!
test02PortfolioBalanceIncreasesWithOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 addTransaction: account.
		
	self assert: 100 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50554487!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2 account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	portfolio1 addTransaction: account1; 
			addTransaction: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 addTransaction: account3; addTransaction: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50554365!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account1 account2 account3 deposit |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 addTransaction: account1; 
			addTransaction: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 addTransaction: deposit.
	
	portfolio2 addTransaction: account3; addTransaction: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50551378!
add: aTransaction

	transactions addTransaction: aTransaction 
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50557025!
addTransaction: aTransaction

	transactions addTransaction: aTransaction 
! !

!methodRemoval: ReceptiveAccount #add: stamp: 's 10/15/2022 00:29:30'!
add: aTransaction

	transactions addTransaction: aTransaction 
!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:29:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:29:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:29:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:29:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:29:58'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:30:00'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:30:24' prior: 50557189!
test02PortfolioBalanceIncreasesWithOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: 100 equals: portfolio1 balance. 
! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:30:25'!
ERROR!
!ReceptiveAccount methodsFor: 'transactions' stamp: 's 10/15/2022 00:31:05' prior: 50557249!
addTransaction: aTransaction

	transactions add: aTransaction 
! !

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:31:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:31:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:31:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:31:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:31:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:31:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:31:07'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:31:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:31:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:31:12'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:31:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:31:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:31:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:31:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:31:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:31:12'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:31:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:31:17'!
ERROR!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:31:31' prior: 50557074!
toBeAddedTo: aParentPortfolio
	parents add: aParentPortfolio .! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:31:33'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:31:41' prior: 50557080!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	self addTransactions: (anAsset transactions).! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:31:43'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:31:45'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:31:54' prior: 50557104!
test03PortfolioBalanceWithMultipleAccounts

	|  account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add: account1; 
			addTransaction: account2;
			addTransaction: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:32:00'!
ERROR!

----STARTUP---- (15 October 2022 00:36:05) as /Users/simonlew/Documents/ISW/mac/CuisUniversity-5466.image!

!AccountTransaction class methodsFor: 'instance creation' stamp: 's 10/14/2022 22:33:16'!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: Deposit class #for: stamp: 's 10/15/2022 00:36:10'!
for: aValue

	^ self new initializeFor: aValue !
!AccountTransaction class methodsFor: 'instance creation' stamp: 's 10/14/2022 22:33:38' prior: 50557509!
for: aValue

	^ self new initializeFor: aValue ! !

!methodRemoval: Withdraw class #for: stamp: 's 10/15/2022 00:36:10'!
for: aValue

	^ self new initializeFor: aValue !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:37:23' overrides: 16961394!
setUp
	| account |
	
	account := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:45:39' prior: 50551141!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	

	| account |
	self assert: 0 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:46:37' prior: 50557527 overrides: 16961394!
setUp
	| accounta |
	
	accounta := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:46:59' prior: 50557532!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	

	| accountt |
	self assert: 0 equals: accountt balance.
! !
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:47:39' prior: 50557539 overrides: 16961394!
setUp
	| account |
	
	account := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:49:20' prior: 50557552 overrides: 16961394!
setUp

	| account |
	
	account := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:53:39' prior: 50557558 overrides: 16961394!
setUp

	| account |
	
	account := ReceptiveAccount new.
	account balance .! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:56:04' prior: 50557544!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| account |
	
	self assert: 0 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:56:45' prior: 50557564 overrides: 16961394!
setUp

	| account |
	
	account := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 22:58:34' prior: 50557577 overrides: 16961394!
setUp

	 
	
	accountt := ReceptiveAccount new.! !

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:10'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: 'accountt'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'setup' stamp: 's 10/14/2022 22:58:43' prior: 50557583 overrides: 16961394!
setUp

	 
	
	accountt := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:58:57' prior: 50557570!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	
	self assert: 0 equals: accountt balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:59:26' prior: 50551148!
test02DepositIncreasesBalanceOnTransactionValue 

	
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
		
	self assert: 100 equals: accountt balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 22:59:50' prior: 50557608!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: accountt.
		
	self assert: 100 equals: accountt balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:00:47' prior: 50551157!
test03WithdrawDecreasesBalanceOnTransactionValue 

	Deposit register: 100 on: accountt.
	Withdraw register: 50 on: accountt.
		
	self assert: 50 equals: accountt balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:01:10' prior: 50551167!
test04WithdrawValueMustBePositive 

	| withdrawValue |
	
	
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: accountt) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:01:38' prior: 50551177!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| account deposit withdraw |
	
	account := ReceptiveAccount new.
	deposit := Deposit register: 100 on: accountt.
	withdraw := Withdraw register: 50 on: accountt.
		
	self assert: (accountt hasRegistered: deposit).
	self assert: (accountt hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:02:04' prior: 50551190!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (accountt hasRegistered: deposit).
	self deny: (accountt hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:02:30' prior: 50551202!
test07AccountKnowsItsTransactions 

	| deposit1 |
	
	accountt := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: accountt.
		
	self assert: 1 equals: accountt transactions size.
	self assert: (accountt transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:03:27' prior: 50557643!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	deposit := Deposit register: 100 on: accountt.
	withdraw := Withdraw register: 50 on: accountt.
		
	self assert: (accountt hasRegistered: deposit).
	self assert: (accountt hasRegistered: withdraw).
! !

!classDefinition: #ReceptiveAccountTest category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:11'!
TestCase subclass: #ReceptiveAccountTest
	instanceVariableNames: 'account'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50557617!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50557667!
test07AccountKnowsItsTransactions 

	| deposit1 |
	
	account := ReceptiveAccount new.
	
	deposit1 := Deposit register: 50 on: account.
		
	self assert: 1 equals: account transactions size.
	self assert: (account transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50557656!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered:withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50557678!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	deposit := Deposit register: 100 on: account.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50557634!
test04WithdrawValueMustBePositive 

	| withdrawValue |
	
	
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (Withdraw register: withdrawValue on: account) value
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50557597 overrides: 16961394!
setUp

	 
	
	account := ReceptiveAccount new.! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50557602!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	
	self assert: 0 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:03:43' prior: 50557625!
test03WithdrawDecreasesBalanceOnTransactionValue 

	Deposit register: 100 on: account.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:04:30'!
m1

	^ self assert: 100 equals: account balance! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:04:30' prior: 50557699!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self m1.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:04:30' prior: 50557777!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self m1.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:03:43' prior: 50557784!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self assert: 100 equals: account balance.
! !

!methodRemoval: ReceptiveAccountTest #m1 stamp: 's 10/15/2022 00:36:11'!
m1

	^ self assert: 100 equals: account balance!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:09:07' prior: 50557757!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| value |
	value:=0.
	self assert: value equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:09:56'!
assertAccountBalanceIs: value

	^ self assert: value equals: account balance! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:09:56' prior: 50557802!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	| value |
	value:=0.
	self assertAccountBalanceIs: value.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:10:54' prior: 50557815!
test01ReceptiveAccountHaveZeroAsBalanceWhenCreated 

	self assertAccountBalanceIs: 0.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:11:30' prior: 50557791!
test02DepositIncreasesBalanceOnTransactionValue 

	
	Deposit register: 100 on: account.
		
	self assertAccountBalanceIs: 100.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:20'!
deposit100

	^ Deposit register: 100 on: account! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:20' prior: 50557764!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100.
	Withdraw register: 50 on: account.
		
	self assert: 50 equals: account balance.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:20' prior: 50557730!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	deposit := self deposit100.
	withdraw := Withdraw register: 50 on: account.
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:20' prior: 50557828!
test02DepositIncreasesBalanceOnTransactionValue 

	
	self deposit100.
		
	self assertAccountBalanceIs: 100.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:12:37' prior: 50557840!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100.
	Withdraw register: 50 on: account.
		
	self assertAccountBalanceIs: 50.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:14:17'!
withdraw: withdrawValue

	^ Withdraw register: withdrawValue on: account! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:14:17' prior: 50557742!
test04WithdrawValueMustBePositive 

	| withdrawValue |
	
	
	withdrawValue := 50.
	
	self assert: withdrawValue equals: (self withdraw: withdrawValue) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:14:46' prior: 50557866!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100.
	self withdraw: 50 .
		
	self assertAccountBalanceIs: 50.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:15:38'!
withdraw50

	^ self withdraw: 50! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:15:38' prior: 50557887!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100.
	self withdraw50 .
		
	self assertAccountBalanceIs: 50.
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:17:55' prior: 50557879!
test04WithdrawValueMustBePositive 
	
	self assert: 50 equals: (self withdraw50) value
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:18:09' prior: 50557848!
test05ReceptiveAccountKnowsRegisteredTransactions 

	| deposit withdraw |
	
	deposit := self deposit100.
	withdraw := self withdraw50 .
		
	self assert: (account hasRegistered: deposit).
	self assert: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:18:49' prior: 50557911!
test05ReceptiveAccountKnowsRegisteredTransactions 

		
	self assert: (account hasRegistered: self deposit100).
	self assert: (account hasRegistered: self withdraw50).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:19:27' prior: 50557719!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit |
	
	deposit :=  Deposit for: 200.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered: self withdraw50 ).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:20:10' prior: 50557931!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered: withdraw).
! !
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/14/2022 23:21:04' prior: 50557707!
test07AccountKnowsItsTransactions 

	| deposit1 |
	
	account := ReceptiveAccount new.
	
	deposit1 := self deposit100.
		
	self assert: 1 equals: account transactions size.
	self assert: (account transactions includes: deposit1).
! !
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/14/2022 23:22:32' overrides: 16961394!
setUp
	! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:11'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'p1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:11'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'p1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/14/2022 23:23:15' prior: 50557962 overrides: 16961394!
setUp
	
	p1 := Portfolio new.! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:23:59' prior: 50550992!
test01EmptyPortfolioHasZeroBalanceWhenCreated

	
	p1 := Portfolio new.
		
	self assert: 0 equals: p1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:24:21' prior: 50557985!
test01EmptyPortfolioHasZeroBalanceWhenCreated

	
	self assert: 0 equals: p1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:24:40' prior: 50550999!
test02PortfolioBalanceIncreasesWithOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	p1 add: account.
		
	self assert: 100 equals: p1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:25:12' prior: 50551010!
test03PortfolioBalanceWithMultipleAccounts

	|  account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	p1 add: account1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: p1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:25:48' prior: 50551027!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2 account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	p1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: p1.
	
	self assert: 180 equals: portfolio2 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:26:18' prior: 50551047!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account1 account2 account3 deposit |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	p1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 add: deposit.
	
	portfolio2 add: account3; add: p1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:26:46' prior: 50551067!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2 account1 account2 deposit |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	p1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: p1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:27:08' prior: 50552424!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	|  account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	p1 := Portfolio new.
	p1 add: account1.

	
	self should: 	[p1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:27:33' prior: 50552370!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	p1 := Portfolio new.
	p1 add: account1.
	portfolio2 := Portfolio new.
	portfolio2 add: p1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:27:56' prior: 50552387!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	p1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: p1.
	
	self should: 	[p1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:28:18' prior: 50552494!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	|  portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	
	p1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6:= Portfolio new.
	
	portfolio6 add: portfolio3.
	p1 add: portfolio3.
	portfolio3 add: portfolio4.
	p1 add: portfolio2.
	portfolio2 add: portfolio5.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:11'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'portfolio1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50558041!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account1 account2 account3 deposit |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 add: deposit.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50557981 overrides: 16961394!
setUp
	
	portfolio1 := Portfolio new.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50558118!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	|  portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6:= Portfolio new.
	
	portfolio6 add: portfolio3.
	portfolio1 add: portfolio3.
	portfolio3 add: portfolio4.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio5.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50558088!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50558060!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2 account1 account2 deposit |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50558076!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	|  account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50557998!
test02PortfolioBalanceIncreasesWithOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: 100 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50558007!
test03PortfolioBalanceWithMultipleAccounts

	|  account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add: account1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50558023!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2 account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50558103!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: portfolio1.
	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/14/2022 23:28:46' prior: 50557992!
test01EmptyPortfolioHasZeroBalanceWhenCreated

	
	self assert: 0 equals: portfolio1 balance. 
! !

!classDefinition: #Deposit category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:12'!
AccountTransaction subclass: #Deposit
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Withdraw category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:12'!
AccountTransaction subclass: #Withdraw
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #AccountTransaction category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:12'!
Object subclass: #AccountTransaction
	instanceVariableNames: 'value'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!AccountTransaction methodsFor: 'value' stamp: 's 10/14/2022 23:34:06' prior: 50551226 overrides: 16902254!
value

	^value.! !

!methodRemoval: Withdraw #value stamp: 's 10/15/2022 00:36:12'!
value

	^value.!
!Deposit methodsFor: 'account actions' stamp: 's 10/14/2022 23:37:49' prior: 50551271 overrides: 50551230!
addTransactionMarketValue: aMarketValue
	^aMarketValue + self value.! !
!Withdraw methodsFor: 'account actions' stamp: 's 10/14/2022 23:37:57' prior: 50551309 overrides: 50551230!
addTransactionMarketValue: aMarketValue
	^aMarketValue - self value.! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:43:43'!
test11EmptyPortfolioHasEmptyTransactions

	
	self assert:  portfolio1 transactions isEmpty . 
! !
!FinancialAsset methodsFor: 'accessing' stamp: 's 10/14/2022 23:44:14'!
transactions
	self shouldBeImplemented.! !
!FinancialAsset methodsFor: 'accessing' stamp: 's 10/14/2022 23:44:26' prior: 50558358!
transactions
	self subclassResponsibility .! !
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:44:45' overrides: 50558363!
transactions
	self shouldBeImplemented.! !
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:46:35' prior: 50558368 overrides: 50558363!
transactions
	^OrderedCollection new! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:49:16'!
test12PortfolioHasTheTransactionsOfOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self deny: portfolio1 transactions isEmpty. 
! !
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:53:31' prior: 50558373 overrides: 50558363!
transactions
	^ assets inject: (OrderedCollection new) into:
	[ 
		:asset :transactions|
		transactions add: asset transactions.
	
	]! !
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:54:23' prior: 50558387 overrides: 50558363!
transactions
	^ assets inject: (OrderedCollection new) into:
	[ 
		:asset :transactions|
		transactions add: (asset transactions).
	
	]! !
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:55:40' prior: 50558395 overrides: 50558363!
transactions
	^ assets inject: (OrderedCollection new) into:
	[ 
	 :transactions :asset|
		transactions add: (asset transactions).
	
	]! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:57:21' prior: 50558377!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: portfolio1 transactions equals: #(deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/14/2022 23:57:42' prior: 50558410!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: portfolio1 transactions equals: deposit. 
! !
!Portfolio methodsFor: 'accesing' stamp: 's 10/15/2022 00:00:27' prior: 50558403 overrides: 50558363!
transactions
	.! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:02:06' prior: 50558421!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: portfolio1 transactions equals: (OrderedCollection with: deposit). 
! !
!Portfolio methodsFor: 'accesing' stamp: 's 10/14/2022 23:55:40' prior: 50558432 overrides: 50558363!
transactions
	^ assets inject: (OrderedCollection new) into:
	[ 
	 :transactions :asset|
		transactions add: (asset transactions).
	
	]! !
!Portfolio methodsFor: 'accesing' stamp: 's 10/15/2022 00:03:14' prior: 50558448 overrides: 50558363!
transactions
	.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:12'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:12'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!Portfolio methodsFor: 'accesing' stamp: 's 10/15/2022 00:03:53' prior: 50558456 overrides: 50558363!
transactions
	^transactions.! !

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:12'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:13'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'parents assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #ReceptiveAccount category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:13'!
FinancialAsset subclass: #ReceptiveAccount
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:13'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: ''
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:13'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'parents assets transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:13'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'parents transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #FinancialAsset category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:13'!
Object subclass: #FinancialAsset
	instanceVariableNames: 'parents transactions'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:13'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!

!classDefinition: #Portfolio category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:13'!
FinancialAsset subclass: #Portfolio
	instanceVariableNames: 'assets'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:06:42' prior: 50551992 overrides: 16920235!
initialize
	parents := OrderedCollection new.
	transactions := OrderedCollection new.! !

!methodRemoval: ReceptiveAccount #initialize stamp: 's 10/15/2022 00:36:13'!
initialize
	super initialize.
	transactions := OrderedCollection new.!
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:08:52' prior: 50552438!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	transactions add: anAsset transactions.! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:10:49' prior: 50558436!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:11:55' prior: 50558562!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	transactions add: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:13:45' prior: 50558582!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	transactions addAll: (anAsset transactions).! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 's 10/15/2022 00:14:07' prior: 50551383 overrides: 50558363!
transactions 

	^ transactions.! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:15:14'!
test12PortfolioHasTheTransactionsOfDirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !

!methodRemoval: PortfolioTest #test12PortfolioHasTheTransactionsOfOneAccount stamp: 's 10/15/2022 00:36:13'!
test12PortfolioHasTheTransactionsOfOneAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:15:32'!
test12PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:15:42'!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !

!methodRemoval: PortfolioTest #test12PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:36:13'!
test12PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 00:36:13'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'portfolio1 p2'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/15/2022 00:16:22' prior: 50558168 overrides: 16961394!
setUp
	
	portfolio1 := Portfolio new.
	p2 := Portfolio new.! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:17:06' prior: 50558639!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:17:46' prior: 50558676!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:18:20' prior: 50558688!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	
	portfolio1 add: account.
		p2 add: portfolio1 .
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:18:25' prior: 50558700!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:23:21' prior: 50558591!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	parents do:[:parent | parent addTransactions: anAsset transactions].
	transactions addAll: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:24:50' prior: 50558724!
add: aTransaction

	transactions add: aTransaction 
! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:23:21' prior: 50558736!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	parents do:[:parent | parent addTransactions: anAsset transactions].
	transactions addAll: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:25:26'!
addTransaction: aTransaction

	transactions add: aTransaction 
! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:26:25' prior: 50558741!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	self addTransactions: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:26:43'!
addTransactions: aTransaction

	transactions add: aTransaction 
! !

!methodRemoval: Portfolio #addTransaction: stamp: 's 10/15/2022 00:36:14'!
addTransaction: aTransaction

	transactions add: aTransaction 
!
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:27:50' prior: 50558766!
addTransactions: someTransactions

	parents do:[:parent | parent addTransactions: someTransactions].
	transactions addAll: someTransactions.
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 's 10/15/2022 00:29:29'!
addTransaction: aTransaction

	transactions add: aTransaction 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50558195!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 addTransaction: account1.
	portfolio2 := Portfolio new.
	portfolio2 addTransaction: portfolio1.

	
	self should: 	[portfolio2 addTransaction: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50558288!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 addTransaction: account1.
	portfolio2 addTransaction: portfolio1.
	
	self should: 	[portfolio1 addTransaction: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!AccountTransaction class methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50551244!
register: aValue on: account

	| transaction |
	
	transaction := self for: aValue.
	account addTransaction: transaction.
		
	^ transaction! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50551986!
toBeAddedTo: aParentPortfolio
	parents addTransaction: aParentPortfolio .! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50558757!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets addTransaction: anAsset.
	self addTransactions: (anAsset transactions).! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50558228!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	|  account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 addTransaction: account1.

	
	self should: 	[portfolio1 addTransaction: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50558252!
test03PortfolioBalanceWithMultipleAccounts

	|  account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 addTransaction: account1; 
			addTransaction: account2;
			addTransaction: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:29' prior: 50558173!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	|  portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6:= Portfolio new.
	
	portfolio6 addTransaction: portfolio3.
	portfolio1 addTransaction: portfolio3.
	portfolio3 addTransaction: portfolio4.
	portfolio1 addTransaction: portfolio2.
	portfolio2 addTransaction: portfolio5.
	
	
	self should: 	[portfolio4 addTransaction: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50558211!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2 account1 account2 deposit |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 addTransaction: account1; 
			addTransaction: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 addTransaction: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50558712!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 addTransaction: portfolio1 .
	portfolio1 addTransaction: account.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50558605!
test12PortfolioHasTheTransactionsOfDirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 addTransaction: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50558242!
test02PortfolioBalanceIncreasesWithOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 addTransaction: account.
		
	self assert: 100 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50558269!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2 account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	portfolio1 addTransaction: account1; 
			addTransaction: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 addTransaction: account3; addTransaction: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50558147!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account1 account2 account3 deposit |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 addTransaction: account1; 
			addTransaction: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 addTransaction: deposit.
	
	portfolio2 addTransaction: account3; addTransaction: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50551378!
add: aTransaction

	transactions addTransaction: aTransaction 
! !
!ReceptiveAccount methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:29:30' prior: 50558783!
addTransaction: aTransaction

	transactions addTransaction: aTransaction 
! !

!methodRemoval: ReceptiveAccount #add: stamp: 's 10/15/2022 00:36:14'!
add: aTransaction

	transactions addTransaction: aTransaction 
!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:30:24' prior: 50558947!
test02PortfolioBalanceIncreasesWithOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: 100 equals: portfolio1 balance. 
! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 's 10/15/2022 00:31:05' prior: 50559007!
addTransaction: aTransaction

	transactions add: aTransaction 
! !
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 00:31:31' prior: 50558832!
toBeAddedTo: aParentPortfolio
	parents add: aParentPortfolio .! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:31:41' prior: 50558838!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	self addTransactions: (anAsset transactions).! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:31:54' prior: 50558862!
test03PortfolioBalanceWithMultipleAccounts

	|  account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add: account1; 
			addTransaction: account2;
			addTransaction: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:36:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:36:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:36:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:36:33'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:36:36'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:37:03' prior: 50559047!
test03PortfolioBalanceWithMultipleAccounts

	|  account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add: account1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:37:17' prior: 50558958!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2 account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 addTransaction: account3; addTransaction: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:37:20'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:37:42' prior: 50559131!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2 account1 account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:37:48'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:37:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:37:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:37:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:37:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:37:48'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:37:48'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:37:48'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:37:48'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:37:48'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:37:48'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:37:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:37:48'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:37:48'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:37:50'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:38:40' prior: 50558979!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account1 account2 account3 deposit |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 addTransaction: deposit.
	
	portfolio2 add: account3; addTransaction: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:38:43'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:38:50' prior: 50559228!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account1 account2 account3 deposit |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 addTransaction: deposit.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:38:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:38:54'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:39:19' prior: 50558904!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2 account1 account2 deposit |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			addTransaction: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 addTransaction: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:39:25'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:39:31' prior: 50559279!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2 account1 account2 deposit |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 addTransaction: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:39:33'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:39:40' prior: 50559300!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2 account1 account2 deposit |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:39:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:39:43'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:39:53' prior: 50558848!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	|  account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	
	self should: 	[portfolio1 addTransaction: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:39:55'!
FAILURE!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:40:13'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:40:28' prior: 50559345!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	|  account1 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.

	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:40:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:40:32'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:40:50' prior: 50558789!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio1 add: account1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:40:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:40:54'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:41:15' prior: 50558806!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  account1 portfolio2 |
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: portfolio1.
	
	self should: 	[portfolio1 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:41:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:41:18'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:42:03' prior: 50558880!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	|  portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6:= Portfolio new.
	
	portfolio6 add: portfolio3.
	portfolio1 add: portfolio3.
	portfolio3 add: portfolio4.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio5.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:42:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:42:06'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:42:29' prior: 50558935!
test12PortfolioHasTheTransactionsOfDirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	portfolio1 add: account.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:42:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:42:33'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:42:47' prior: 50558922!
test13PortfolioHasTransactionsOfIndirectAccount

	| account deposit|
	
	
	account := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:42:49'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:43:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:43:04'!
PASSED!

----SNAPSHOT----(15 October 2022 00:43:13) CuisUniversity-5466.image priorSource: 7068965!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:48:53'!
test14PortfolioHasManyTransactionsOfDifferentAccounts

	| otheraccount account otherdeposit deposit|
	
	
	account := ReceptiveAccount  new.
	otheraccount := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
	p2 add: otheraccount.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
! !

!testRun: #PortfolioTest #test14PortfolioHasManyTransactionsOfDifferentAccounts stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:48:58'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasManyTransactionsOfDifferentAccounts stamp: 's 10/15/2022 00:48:58'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:49:09' prior: 50559576!
test14PortfolioHasManyTransactionsOfDifferentAccounts

	| otheraccount account otherdeposit deposit|
	
	
	account := ReceptiveAccount  new.
	otheraccount := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
	p2 add: otheraccount.
		
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
! !

!testRun: #PortfolioTest #test14PortfolioHasManyTransactionsOfDifferentAccounts stamp: 's 10/15/2022 00:49:13'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 00:51:13'!
test14PortfolioHasTheLatestTransactionsOfDifferentAccounts

	| otheraccount account otherdeposit deposit|
	
	
	account := ReceptiveAccount  new.
	otheraccount := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
	p2 add: otheraccount.
		
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
! !

!methodRemoval: PortfolioTest #test14PortfolioHasManyTransactionsOfDifferentAccounts stamp: 's 10/15/2022 00:51:13'!
test14PortfolioHasManyTransactionsOfDifferentAccounts

	| otheraccount account otherdeposit deposit|
	
	
	account := ReceptiveAccount  new.
	otheraccount := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account.
	
	p2 add: portfolio1 .
	portfolio1 add: account.
	p2 add: otheraccount.
		
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:51:22'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 00:51:22'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 00:51:22'!
FAILURE!
!ReceptiveAccount methodsFor: 'transactions' stamp: 's 10/15/2022 00:53:15' prior: 50559027!
addTransaction: aTransaction
	parents do:[:parent | parent addTransactions: (OrderedCollection with: aTransaction)].
	transactions add: aTransaction 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 00:53:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 00:53:24'!
PASSED!
!ReceptiveAccount methodsFor: 'transactions' stamp: 's 10/15/2022 00:56:17'!
addTransactionToAllTheAssetsIBelong: aTransaction

	^ parents do:[:parent | parent addTransactions: (OrderedCollection with: aTransaction)]! !
!ReceptiveAccount methodsFor: 'transactions' stamp: 's 10/15/2022 00:56:17' prior: 50559762!
addTransaction: aTransaction
	self addTransactionToAllTheAssetsIBelong: aTransaction.
	transactions add: aTransaction 
! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:57:53'!
addTransactionsToAllTheAssetsIBelong: someTransactions

	^ parents do:[:parent | parent addTransactions: someTransactions]! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:57:53' prior: 50558776!
addTransactions: someTransactions

	self addTransactionsToAllTheAssetsIBelong: someTransactions.
	transactions addAll: someTransactions.
! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:59:16' prior: 50559038!
add: safeAdd
	(self canBeAdded: safeAdd) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	safeAdd toBeAddedTo: self.
	assets add: safeAdd.
	self addTransactions: (safeAdd transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 00:59:41' prior: 50559876!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	anAsset toBeAddedTo: self.
	assets add: anAsset.
	self addTransactions: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 01:00:04'!
safeAdd: anAsset

	anAsset toBeAddedTo: self.
	assets add: anAsset! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 01:00:04' prior: 50559885!
add: anAsset
	(self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ].
	self safeAdd: anAsset.
	self addTransactions: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 01:00:59'!
raiseErrorifCannotAdd: anAsset

	^ (self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ]! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 01:00:59' prior: 50559899!
add: anAsset
	self raiseErrorifCannotAdd: anAsset.
	self safeAdd: anAsset.
	self addTransactions: (anAsset transactions).! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 01:01:47'!
oneOfMyAssetsHas: anAsset

	^ [assets anySatisfy: [ :asset | asset hasAsset: anAsset ]]! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 01:01:47' prior: 50552136!
hasAsset: anAsset

	^anAsset = self or: self oneOfMyAssetsHas: anAsset.! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 01:01:57' prior: 50559926!
hasAsset: anAsset

	^anAsset = self or: [self oneOfMyAssetsHas: anAsset].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:02:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:02:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:02:02'!
ERROR!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:02:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:02:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:02:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:02:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:02:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:02:02'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:02:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:02:05'!
ERROR!
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 01:02:38' prior: 50559920!
oneOfMyAssetsHas: anAsset

	^ assets anySatisfy: [ :asset | asset hasAsset: anAsset ]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:02:45'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:02:58'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:02:58'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:04:57'!
canBeAddedToAllTheAssetsIBelong: anAsset

	^ parents allSatisfy: [:parent| parent canBeAdded: anAsset ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:04:57' prior: 50552179!
canBeAdded: anAsset
	parents ifEmpty: [^(self hasAsset: anAsset ) not].
	^self canBeAddedToAllTheAssetsIBelong: anAsset.! !
!Portfolio methodsFor: 'adding' stamp: 's 10/15/2022 01:06:18'!
raiseErrorIfCannotAdd: anAsset

	^ (self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:06:18' prior: 50559914!
add: anAsset
	self raiseErrorIfCannotAdd: anAsset.
	self safeAdd: anAsset.
	self addTransactions: (anAsset transactions).! !

!methodRemoval: Portfolio #raiseErrorifCannotAdd: stamp: 's 10/15/2022 01:06:18'!
raiseErrorifCannotAdd: anAsset

	^ (self canBeAdded: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ]!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:06:37'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:06:37'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:08:34' prior: 50560188!
canBeAdded: anAsset
	parents ifEmpty: [^(self hasAsset: anAsset ) not].
	^ parents allSatisfy: [:parent| parent canBeAdded: anAsset ].! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:08:35'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:08:36'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:08:36'!
PASSED!

!methodRemoval: Portfolio #canBeAddedToAllTheAssetsIBelong: stamp: 's 10/15/2022 01:08:43'!
canBeAddedToAllTheAssetsIBelong: anAsset

	^ parents allSatisfy: [:parent| parent canBeAdded: anAsset ]!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:08:47'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:08:47'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:11:02' prior: 50560293!
canBeAdded: anAsset
	^(parents isEmpty and: [^(self hasAsset: anAsset ) not]) or:[
	 parents allSatisfy: [:parent| parent canBeAdded: anAsset ]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:11:07'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:11:07'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:14:40'!
canAdd: anAsset
	^(parents isEmpty and: [^(self hasAsset: anAsset ) not]) or:[
	 parents allSatisfy: [:parent| parent canBeAdded: anAsset ]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:14:40' prior: 50560194!
raiseErrorIfCannotAdd: anAsset

	^ (self canAdd: anAsset) ifFalse: [self error: self class cannotAddAssetErrorMessage ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:14:40' prior: 50560464!
canBeAdded: anAsset
	^(parents isEmpty and: [^(self hasAsset: anAsset ) not]) or:[
	 parents allSatisfy: [:parent| parent canAdd: anAsset ]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:14:40' prior: 50560550!
canAdd: anAsset
	^(parents isEmpty and: [^(self hasAsset: anAsset ) not]) or:[
	 parents allSatisfy: [:parent| parent canAdd: anAsset ]]! !

!methodRemoval: Portfolio #canBeAdded: stamp: 's 10/15/2022 01:14:40'!
canBeAdded: anAsset
	^(parents isEmpty and: [^(self hasAsset: anAsset ) not]) or:[
	 parents allSatisfy: [:parent| parent canAdd: anAsset ]]!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:14:44'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:14:44'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:15:07' prior: 50560573!
canAdd: anAsset
	^(parents isEmpty and: [(self hasAsset: anAsset ) not]) or:[
	 parents allSatisfy: [:parent| parent canAdd: anAsset ]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:15:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:15:09'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:15:09'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:15:09'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:15:09'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:15:09'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:15:09'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:15:10'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:15:10'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:15:10'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:15:10'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:15:48'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:15:48'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:15:48'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:15:48'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:15:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:15:50'!
FAILURE!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:17:05' prior: 50560666!
canAdd: anAsset
	^(parents isEmpty not and: [(self hasAsset: anAsset ) not] ) and:[
	 parents allSatisfy: [:parent| parent canAdd: anAsset ]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:17:09'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:17:09'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:17:09'!
ERROR!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:17:12'!
ERROR!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:17:43' prior: 50560835!
canAdd: anAsset
	^(parents isEmpty and: [(self hasAsset: anAsset ) not] ) or:[
	 parents allSatisfy: [:parent| parent canAdd: anAsset ]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:17:48'!
FAILURE!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:17:48'!
FAILURE!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:17:48'!
FAILURE!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:17:48'!
FAILURE!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:17:48'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:17:48'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:18:56' prior: 50560898!
canAdd: anAsset
	^((self hasAsset: anAsset ) not ) and:[
	 parents allSatisfy: [:parent| parent canAdd: anAsset ]]! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:19:00'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:19:00'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:19:44' prior: 50560984!
canAdd: anAsset
	^((self hasAsset: anAsset ) not ) and:[
	 parents allSatisfy: [:parent | parent canAdd: anAsset ]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:22:10' prior: 50561070!
canAdd: anAsset
	^((self hasAsset: anAsset ) not ) and:[
	 parents allSatisfy: [:parent | parent canAdd: anAsset ]]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:23:13' prior: 50561077!
canAdd: anAsset

	^( ( self hasAsset: anAsset ) not ) and:[
	 parents allSatisfy: [:parent | parent canAdd: anAsset ]].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:24:50'!
canTheAssetsIBelongToAdd: anAsset

	^ parents allSatisfy: [:parent | parent canAdd: anAsset ]! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:24:50' prior: 50561084!
canAdd: anAsset

	^( ( self hasAsset: anAsset ) not ) and:[
	 self canTheAssetsIBelongToAdd: anAsset].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:26:23' prior: 50561097!
canAdd: anAsset

	^( self canMyAssetsAdd: anAsset ) and:[
	 self canTheAssetsIBelongToAdd: anAsset].! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:26:57'!
canMyAssetsAdd: anAsset

	^(( self hasAsset: anAsset ) not ).! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 01:27:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 01:27:05'!
PASSED!
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:29:29'!
isNotOneOfMyAssets: anAsset

	^(( self hasAsset: anAsset ) not ).! !
!Portfolio methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:29:29' prior: 50561104!
canAdd: anAsset

	^( self isNotOneOfMyAssets: anAsset ) and:[
	 self canTheAssetsIBelongToAdd: anAsset].! !

!methodRemoval: Portfolio #canMyAssetsAdd: stamp: 's 10/15/2022 01:29:29'!
canMyAssetsAdd: anAsset

	^(( self hasAsset: anAsset ) not ).!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:35:50'!
m1

	^ self assert: 0 equals: portfolio1 balance! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:35:50' prior: 50558304!
test01EmptyPortfolioHasZeroBalanceWhenCreated

	
	self m1. 
! !

!methodRemoval: PortfolioTest #m1 stamp: 's 10/15/2022 01:36:06'!
m1

	^ self assert: 0 equals: portfolio1 balance!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:36:14' prior: 50561214!
test01EmptyPortfolioHasZeroBalanceWhenCreated

	
	^ self assert: 0 equals: portfolio1 balance. 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:36:16'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:36:16'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:36:52' prior: 50559017!
test02PortfolioBalanceIncreasesWithOneAccount

	| account value |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
		value:=100
	self assert: value equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:37:10' prior: 50561285!
test02PortfolioBalanceIncreasesWithOneAccount

	| account value |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
		value:=100.
	self assert: value equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:37:57'!
assertPortfolio1BalanceIs: value

	^ self assert: value equals: portfolio1 balance! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:37:57' prior: 50561295!
test02PortfolioBalanceIncreasesWithOneAccount

	| account value |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
		value:=100.
	self assertPortfolio1BalanceIs: value. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:38:12' prior: 50561311!
test02PortfolioBalanceIncreasesWithOneAccount

	| account |
	
	
	account := ReceptiveAccount  new.
	Deposit register: 100 on: account.
	
	portfolio1 add: account.
	self assertPortfolio1BalanceIs: 100. 
! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:38:15'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:38:15'!
PASSED!

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 01:39:03'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'portfolio1 p2 accountt'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/15/2022 01:38:58' prior: 50558671 overrides: 16961394!
setUp
	
	accountt := ReceptiveAccount  new.
	portfolio1 := Portfolio new.
	p2 := Portfolio new.! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:39:22' prior: 50561321!
test02PortfolioBalanceIncreasesWithOneAccount

	|  |
	
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
	
	portfolio1 add: accountt.
	self assertPortfolio1BalanceIs: 100. 
! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:39:24'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:39:24'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:40:45' prior: 50559115!
test03PortfolioBalanceWithMultipleAccounts

	|  account2 account3 |
	
	
	accountt := ReceptiveAccount  new.
	Withdraw register: 100 on: accountt.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add: accountt; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:41:28' prior: 50559154!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	portfolio1 add: accountt; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:41:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:41:31'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:41:56' prior: 50559252!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account2 account3 deposit |
	
	
	Deposit register: 100 on: accountt.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: accountt.
	
	
	portfolio1 add: accountt; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 addTransaction: deposit.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:42:01'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:42:01'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:42:24' prior: 50559321!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2  account2 deposit |
	
	Deposit register: 100 on: accountt.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: accountt.
	
	
	portfolio1 add: accountt; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:42:27'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:42:28'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:42:28'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:42:28'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:42:28'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:42:47' prior: 50559366!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
	
	portfolio1 := Portfolio new.
	portfolio1 add: accountt.

	
	self should: 	[portfolio1 add: accountt.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:43:12' prior: 50559387!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  portfolio2 |
	
	Deposit register: 100 on: accountt.
	
	portfolio1 := Portfolio new.
	portfolio1 add: accountt.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: accountt.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:43:16'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:43:36' prior: 50559411!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  portfolio2 |
	
	Deposit register: 100 on: accountt.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: accountt.
	portfolio2 add: portfolio1.
	
	self should: 	[portfolio1 add: accountt.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:43:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:43:42'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:44:12' prior: 50559464!
test12PortfolioHasTheTransactionsOfDirectAccount

	| deposit|
	
	
	deposit := Deposit register: 100 on: accountt.
	
	portfolio1 add: accountt.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:44:18'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:44:18'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:44:18'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:44:18'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:44:18'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:44:18'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:44:18'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:44:18'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:44:18'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:44:19'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:44:19'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:44:19'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:44:19'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:44:19'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:44:19'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:44:38' prior: 50559483!
test13PortfolioHasTransactionsOfIndirectAccount

	| deposit|
	
	
	
	deposit := Deposit register: 100 on: accountt.
	
	p2 add: portfolio1 .
	portfolio1 add: accountt.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:44:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:44:41'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:45:03' prior: 50559670!
test14PortfolioHasTheLatestTransactionsOfDifferentAccounts

	| otheraccount otherdeposit deposit|
	
	otheraccount := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: accountt.
	
	p2 add: portfolio1 .
	portfolio1 add: accountt.
	p2 add: otheraccount.
		
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
! !

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:45:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:45:11'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:45:42' prior: 50561401!
test02PortfolioBalanceIncreasesWithOneAccount

	|  |
	
	
	
	portfolio1 add: accountt.
	self assertPortfolio1BalanceIs: 100. 
! !
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/15/2022 01:46:00' prior: 50561395 overrides: 16961394!
setUp
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
	
	portfolio1 := Portfolio new.
	p2 := Portfolio new.! !
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/15/2022 01:46:40' prior: 50562018 overrides: 16961394!
setUp
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
	
	portfolio1 := Portfolio new.
	p2 := Portfolio new.! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:46:54'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:46:54'!
FAILURE!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:46:54'!
FAILURE!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:46:54'!
FAILURE!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:46:57'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:48:11' prior: 50562010!
test02PortfolioBalanceIncreasesWithOneAccount

	
	Deposit register: 100 on: accountt.
	
	portfolio1 add: accountt.
	self assertPortfolio1BalanceIs: 100. 
! !
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/15/2022 01:48:21' prior: 50562026 overrides: 16961394!
setUp
	
	accountt := ReceptiveAccount  new.
	
	portfolio1 := Portfolio new.
	p2 := Portfolio new.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:48:27'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:48:27'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:48:52' prior: 50561223!
test01EmptyPortfolioHasZeroBalanceWhenCreated

	
	^ self assertPortfolio1BalanceIs: 0 . 
! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:48:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:48:59'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:49:03'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:49:03'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45'!
addAccount1ToPortfolio1

	^ portfolio1 add: accountt! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561805!
test12PortfolioHasTheTransactionsOfDirectAccount

	| deposit|
	
	
	deposit := Deposit register: 100 on: accountt.
	
	self addAccount1ToPortfolio1.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561702!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
	
	portfolio1 := Portfolio new.
	self addAccount1ToPortfolio1.

	
	self should: 	[portfolio1 add: accountt.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50562241!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
	
	portfolio1 := Portfolio new.
	self addAccount1ToPortfolio1.

	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50562093!
test02PortfolioBalanceIncreasesWithOneAccount

	
	Deposit register: 100 on: accountt.
	
	self addAccount1ToPortfolio1.
	self assertPortfolio1BalanceIs: 100. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561715!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  portfolio2 |
	
	Deposit register: 100 on: accountt.
	
	portfolio1 := Portfolio new.
	self addAccount1ToPortfolio1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: accountt.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561466!
test03PortfolioBalanceWithMultipleAccounts

	|  account2 account3 |
	
	
	accountt := ReceptiveAccount  new.
	Withdraw register: 100 on: accountt.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	self addAccount1ToPortfolio1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561734!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  portfolio2 |
	
	Deposit register: 100 on: accountt.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: accountt.
	portfolio2 add: portfolio1.
	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561871!
test13PortfolioHasTransactionsOfIndirectAccount

	| deposit|
	
	
	
	deposit := Deposit register: 100 on: accountt.
	
	p2 add: portfolio1 .
	self addAccount1ToPortfolio1.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561557!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account2 account3 deposit |
	
	
	Deposit register: 100 on: accountt.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: accountt.
	
	
	self addAccount1ToPortfolio1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 addTransaction: deposit.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561482!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	accountt := ReceptiveAccount  new.
	Deposit register: 100 on: accountt.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	self addAccount1ToPortfolio1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561631!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2  account2 deposit |
	
	Deposit register: 100 on: accountt.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: accountt.
	
	
	self addAccount1ToPortfolio1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:49:45' prior: 50561938!
test14PortfolioHasTheLatestTransactionsOfDifferentAccounts

	| otheraccount otherdeposit deposit|
	
	otheraccount := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: accountt.
	
	p2 add: portfolio1 .
	self addAccount1ToPortfolio1.
	p2 add: otheraccount.
		
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
! !

!classDefinition: #PortfolioTest category: 'Portfolio-Ejercicio' stamp: 's 10/15/2022 01:50:06'!
TestCase subclass: #PortfolioTest
	instanceVariableNames: 'portfolio1 p2 account1'
	classVariableNames: ''
	poolDictionaries: ''
	category: 'Portfolio-Ejercicio'!
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:06' prior: 50562320!
test13PortfolioHasTransactionsOfIndirectAccount

	| deposit|
	
	
	
	deposit := Deposit register: 100 on: account1.
	
	p2 add: portfolio1 .
	self addAccount1ToPortfolio1.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:06' prior: 50562254!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	self addAccount1ToPortfolio1.

	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:06' prior: 50562102 overrides: 16961394!
setUp
	
	account1 := ReceptiveAccount  new.
	
	portfolio1 := Portfolio new.
	p2 := Portfolio new.! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:06' prior: 50562369!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2  account2 deposit |
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	self addAccount1ToPortfolio1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:06' prior: 50562350!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	self addAccount1ToPortfolio1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:06' prior: 50562267!
test02PortfolioBalanceIncreasesWithOneAccount

	
	Deposit register: 100 on: account1.
	
	self addAccount1ToPortfolio1.
	self assertPortfolio1BalanceIs: 100. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:06' prior: 50562290!
test03PortfolioBalanceWithMultipleAccounts

	|  account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	self addAccount1ToPortfolio1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:07' prior: 50562306!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  portfolio2 |
	
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: portfolio1.
	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:07' prior: 50562225!
addAccount1ToPortfolio1

	^ portfolio1 add: account1! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:07' prior: 50562331!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account2 account3 deposit |
	
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	self addAccount1ToPortfolio1; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 addTransaction: deposit.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:07' prior: 50562230!
test12PortfolioHasTheTransactionsOfDirectAccount

	| deposit|
	
	
	deposit := Deposit register: 100 on: account1.
	
	self addAccount1ToPortfolio1.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:07' prior: 50562384!
test14PortfolioHasTheLatestTransactionsOfDifferentAccounts

	| otheraccount otherdeposit deposit|
	
	otheraccount := ReceptiveAccount  new.
	deposit := Deposit register: 100 on: account1.
	
	p2 add: portfolio1 .
	self addAccount1ToPortfolio1.
	p2 add: otheraccount.
		
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
! !
!PortfolioTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 01:50:07' prior: 50562275!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  portfolio2 |
	
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	self addAccount1ToPortfolio1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:50:19' prior: 50562485!
test03PortfolioBalanceWithMultipleAccounts

	|  account2 account3 |
	
	
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	self addAccount1ToPortfolio1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:50:20'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:51:10' prior: 50562517!
addAccount1ToPortfolio1

	^ portfolio1 add: account1.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:51:12'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:51:12'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:51:12'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:51:12'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:51:12'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:51:15'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:51:38' prior: 50562603!
addAccount1ToPortfolio1

	portfolio1 add: account1.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:51:51'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:51:51'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:51:51'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:51:51'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:51:51'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:51:51'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:51:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:51:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:51:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:51:51'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:51:51'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:51:51'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:51:51'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:51:51'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:52:28' prior: 50562663!
addAccount1ToPortfolio1

	portfolio1 add: account1.
	^portfolio1 .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:52:33'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:52:33'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:52:33'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:52:33'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:52:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:52:36'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:54:14' prior: 50562584!
test03PortfolioBalanceWithMultipleAccounts

	|  account2 account3 |
	
	
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add account1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:54:29' prior: 50562781!
test03PortfolioBalanceWithMultipleAccounts

	|  account2 account3 |
	
	
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add: account1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:54:31' prior: 50562796!
test03PortfolioBalanceWithMultipleAccounts

	|  account2 account3 |
	
	
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add: account1; 
			add: account2;
			add: account3.
		
	self assert: -20 equals: portfolio1 balance. 
! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:54:31'!
ERROR!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:54:31'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:54:31'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:54:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:54:34'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:54:54' prior: 50562457!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	account1 := ReceptiveAccount  new.
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	portfolio1 add: account1 ; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:54:58'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:55:54' prior: 50562885!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	portfolio1 add: account1 ; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:55:58'!
ERROR!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:56:02'!
ERROR!
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/15/2022 01:58:43' prior: 50562434 overrides: 16961394!
setUp
	
	account1 := ReceptiveAccount  new.
	portfolio1 := Portfolio new.
	p2 := Portfolio new.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:58:45'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:58:45'!
ERROR!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 01:58:45'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:58:48'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:59:13' prior: 50562522!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account2 account3 deposit |
	
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1 ; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 addTransaction: deposit.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 01:59:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:59:21'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 01:59:42' prior: 50562441!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2  account2 deposit |
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	portfolio1 add: account1 ; 
			add: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:59:45'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:59:56'!
ERROR!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 01:59:59'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:02:13' prior: 50562811!
test03PortfolioBalanceWithMultipleAccounts

	|  account2 account3 |
	
	
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio1 add: account1; 
			add: account2;
			add: account3.
		
	self assertPortfolio1BalanceIs: -20. 
! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:02:14'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:02:14'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:03:17'!
addAccount1toPortfolio1And: account3 And: account2

	^ portfolio1 add: account1; 
			add: account2;
			add: account3! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:03:17' prior: 50563047!
test03PortfolioBalanceWithMultipleAccounts

	|  account2 account3 |
	
	
	Withdraw register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	self addAccount1toPortfolio1And: account3 And: account2.
		
	self assertPortfolio1BalanceIs: -20. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:03:50'!
addAccount1ToPortfolio1And: account2

	^ portfolio1 add: account1 ; 
			add: account2! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:03:50' prior: 50563021!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2  account2 deposit |
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	self addAccount1ToPortfolio1And: account2.
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: portfolio1.
	
	deposit:= Deposit for: 180.
	self deny: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:03:50' prior: 50562908!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	self addAccount1ToPortfolio1And: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: 180 equals: portfolio2 balance. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:03:50' prior: 50562996!
test05PortfolioHasRegisteredSomeTransaction

	| portfolio2 account2 account3 deposit |
	
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account1.
	
	
	self addAccount1ToPortfolio1And: account2.
	
	portfolio2 := Portfolio new.
	
	account3 := ReceptiveAccount  new.
	deposit:= Deposit for: 180.
	account3 addTransaction: deposit.
	
	portfolio2 add: account3; add: portfolio1.
	
	self assert: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:06:34' prior: 50563159!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	portfolio2 := Portfolio new.
	
	
	portfolio2 add: account2.
	
	portfolio1 add: account3; add: portfolio2.
	
	self assertPortfolio1BalanceIs: 180 
! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:06:36'!
FAILURE!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:07:46' prior: 50563195!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	Deposit register: 100 on: account1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	portfolio2 := Portfolio new.
	
	
	portfolio2 add: account1; add: account2 .
	
	portfolio1 add: account3; add: portfolio2.
	
	self assertPortfolio1BalanceIs: 180 
! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:07:48'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:07:48'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:09:49' prior: 50563177!
test05PortfolioHasRegisteredSomeTransaction

	|  deposit |
	
	
	deposit := Deposit register: 100 on: account1.
	
	
	self addAccount1ToPortfolio1.
	
	self assert: (portfolio1 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:09:55'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:09:55'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:11:15' prior: 50563144!
test06PortfolioHasNotRegisteredSomeTransaction

	| portfolio2  deposit |
	
	Deposit register: 100 on: account1.
	
	
	
	self addAccount1ToPortfolio1.
	
	
	deposit:= Deposit for: 100.
	self deny: (portfolio2 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:11:26' prior: 50563354!
test06PortfolioHasNotRegisteredSomeTransaction

	| deposit |
	
	Deposit register: 100 on: account1.
	
	
	
	self addAccount1ToPortfolio1.
	
	
	deposit:= Deposit for: 100.
	self deny: (portfolio1 hasRegistered: deposit)
! !

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:11:29'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:11:29'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:11:29'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:11:30'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:11:33'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:11:33'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:11:53' prior: 50563364!
test06PortfolioHasNotRegisteredSomeTransaction

	| deposit |
	
	Deposit register: 100 on: account1.
	
	self addAccount1ToPortfolio1.
	
	deposit:= Deposit for: 100.
	self deny: (portfolio1 hasRegistered: deposit)
! !
!Behavior method!
initialize
	(parents _ [
	(OrderedCollection
		cover: (24 to: 40)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 19)
		declaredAt: (13 to: 19).
	(transactions _ [
	(OrderedCollection
		cover: (64 to: 80)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{82 to: 84})
		cover: (48 to: 59)
		declaredAt: (48 to: 59).! !
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(assets _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (32 to: 37)
		declaredAt: (32 to: 37).! !
!Behavior method!
balance
	^ [
	(assets
		cover: (12 to: 17)
		declaredAt: (12 to: 17))
		sum: [ :each |
			[
			(each
				cover: (33 to: 36)
				declaredAt: (26 to: 29)) balance ] valueCoveringAll:
				{38 to: 44} ]
		ifEmpty: [
			0 coverAll:
				{57 to: 57} ]] valueCoveringAll:
		{19 to: 22. 47 to: 54}.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:12:04'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) addTransaction:
		(transaction
			cover: (109 to: 119)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 107}.
	^ transaction
		cover: (128 to: 138)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
addTransaction: aTransaction
	[
	(self coverAll:
		{31 to: 34}) addTransactionToAllTheAssetsIBelong:
		(aTransaction
			cover: (73 to: 84)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{36 to: 71}.
	[
	(transactions
		cover: (88 to: 99)
		declaredAt: (88 to: 99)) add:
		(aTransaction
			cover: (106 to: 117)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{101 to: 104}.! !
!Behavior method!
addTransactionToAllTheAssetsIBelong: aTransaction
	^ [
	(parents
		cover: (55 to: 61)
		declaredAt: (55 to: 61)) do: [ :parent |
		[
		(parent
			cover: (77 to: 82)
			declaredAt: (68 to: 73)) addTransactions:
			([
			(OrderedCollection
				cover: (102 to: 118)
				declaredAt: (102 to: 118)) with:
				(aTransaction
					cover: (126 to: 137)
					declaredAt: (38 to: 49)) ] valueCoveringAll:
				{120 to: 124}) ] valueCoveringAll:
			{84 to: 99} ]] valueCoveringAll:
		{63 to: 65}.! !
!Behavior method!
add: anAsset
	[
	(self coverAll:
		{15 to: 18}) raiseErrorIfCannotAdd:
		(anAsset
			cover: (43 to: 49)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{20 to: 41}.
	[
	(self coverAll:
		{53 to: 56}) safeAdd:
		(anAsset
			cover: (67 to: 73)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{58 to: 65}.
	[
	(self coverAll:
		{77 to: 80}) addTransactions:
		([
		(anAsset
			cover: (100 to: 106)
			declaredAt: (6 to: 12)) transactions ] valueCoveringAll:
			{108 to: 119}) ] valueCoveringAll:
		{82 to: 97}.! !
!Behavior method!
raiseErrorIfCannotAdd: anAsset
	^ [
	([
	(self coverAll:
		{37 to: 40}) canAdd:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (24 to: 30)) ] valueCoveringAll:
		{42 to: 48}) ifFalse: [
		[
		(self coverAll:
			{69 to: 72}) error:
			([
			([
			(self coverAll:
				{81 to: 84}) class ] valueCoveringAll:
				{86 to: 90}) cannotAddAssetErrorMessage ] valueCoveringAll:
				{92 to: 117}) ] valueCoveringAll:
			{74 to: 79} ]] valueCoveringAll:
		{59 to: 66}.! !
!Behavior method!
canAdd: anAsset
	^ [
	([
	(self coverAll:
		{22 to: 25}) isNotOneOfMyAssets:
		(anAsset
			cover: (47 to: 53)
			declaredAt: (9 to: 15)) ] valueCoveringAll:
		{27 to: 45}) and: [
		[
		(self coverAll:
			{65 to: 68}) canTheAssetsIBelongToAdd:
			(anAsset
				cover: (96 to: 102)
				declaredAt: (9 to: 15)) ] valueCoveringAll:
			{70 to: 94} ]] valueCoveringAll:
		{57 to: 60}.! !
!Behavior method!
isNotOneOfMyAssets: anAsset
	^ [
	([
	(self coverAll:
		{35 to: 38}) hasAsset:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (21 to: 27)) ] valueCoveringAll:
		{40 to: 48}) not ] valueCoveringAll:
		{60 to: 62}.! !
!Behavior method!
hasAsset: anAsset
	^ [
	([
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}) or: [
		[
		(self coverAll:
			{42 to: 45}) oneOfMyAssetsHas:
			(anAsset
				cover: (65 to: 71)
				declaredAt: (11 to: 17)) ] valueCoveringAll:
			{47 to: 63} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
oneOfMyAssetsHas: anAsset
	^ [
	(assets
		cover: (31 to: 36)
		declaredAt: (31 to: 36)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasAsset:
			(anAsset
				cover: (77 to: 83)
				declaredAt: (19 to: 25)) ] valueCoveringAll:
			{67 to: 75} ]] valueCoveringAll:
		{38 to: 48}.! !
!Behavior method!
canTheAssetsIBelongToAdd: anAsset
	^ [
	(parents
		cover: (39 to: 45)
		declaredAt: (39 to: 45)) allSatisfy: [ :parent |
		[
		(parent
			cover: (70 to: 75)
			declaredAt: (61 to: 66)) canAdd:
			(anAsset
				cover: (85 to: 91)
				declaredAt: (27 to: 33)) ] valueCoveringAll:
			{77 to: 83} ]] valueCoveringAll:
		{47 to: 57}.! !
!Behavior method!
safeAdd: anAsset
	[
	(anAsset
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) toBeAddedTo:
		(self coverAll:
			{41 to: 44}) ] valueCoveringAll:
		{28 to: 39}.
	[
	(assets
		cover: (48 to: 53)
		declaredAt: (48 to: 53)) add:
		(anAsset
			cover: (60 to: 66)
			declaredAt: (10 to: 16)) ] valueCoveringAll:
		{55 to: 58}.! !
!Behavior method!
toBeAddedTo: aParentPortfolio
	[
	(parents
		cover: (32 to: 38)
		declaredAt: (32 to: 38)) add:
		(aParentPortfolio
			cover: (45 to: 60)
			declaredAt: (14 to: 29)) ] valueCoveringAll:
		{40 to: 43}.! !
!Behavior method!
transactions
	^ transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30).! !
!Behavior method!
addTransactions: someTransactions
	[
	(self coverAll:
		{37 to: 40}) addTransactionsToAllTheAssetsIBelong:
		(someTransactions
			cover: (80 to: 95)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{42 to: 78}.
	[
	(transactions
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) addAll:
		(someTransactions
			cover: (120 to: 135)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{112 to: 118}.! !
!Behavior method!
addTransactionsToAllTheAssetsIBelong: someTransactions
	^ [
	(parents
		cover: (60 to: 66)
		declaredAt: (60 to: 66)) do: [ :parent |
		[
		(parent
			cover: (82 to: 87)
			declaredAt: (73 to: 78)) addTransactions:
			(someTransactions
				cover: (106 to: 121)
				declaredAt: (39 to: 54)) ] valueCoveringAll:
			{89 to: 104} ]] valueCoveringAll:
		{68 to: 70}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :acc :transaction |
			[
			(transaction
				cover: (63 to: 73)
				declaredAt: (48 to: 58)) addTransactionMarketValue:
				(acc
					cover: (102 to: 104)
					declaredAt: (43 to: 45)) ] valueCoveringAll:
				{75 to: 100} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) +
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !
!Behavior method!
value
	^ value
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:12:04'!
PASSED!
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
hasAsset: anAsset
	^ [
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) -
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:12:04'!
PASSED!
!Behavior method!
transactions
	^ transactions
		cover: (16 to: 27)
		declaredAt: (16 to: 27).! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:12:04'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(assets
		cover: (32 to: 37)
		declaredAt: (32 to: 37)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasRegistered:
			(aTransaction
				cover: (82 to: 93)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{67 to: 80} ]] valueCoveringAll:
		{39 to: 49}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:12:04'!
PASSED!
!Behavior method!
cannotAddAssetErrorMessage
	^ 'Cannot add duplicated asset' coverAll:
		{30 to: 58}.! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 02:12:04'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 02:12:04'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:12:37' prior: 50562420!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	
	Deposit register: 100 on: account1.
	
	portfolio1 := Portfolio new.
	self addAccount1ToPortfolio1.

	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:12:52' prior: 50563871!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	
	self addAccount1ToPortfolio1.

	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:12:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:12:53'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:01' prior: 50563883!
test07PortfolioCannotAddAccountTwoTimesAtSameLevel

	self addAccount1ToPortfolio1.

	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:13:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:13:02'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:57'!
deposit100IntoAccount1

	^ Deposit register: 100 on: account1! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:57' prior: 50562541!
test12PortfolioHasTheTransactionsOfDirectAccount

	| deposit|
	
	
	deposit := self deposit100IntoAccount1.
	
	self addAccount1ToPortfolio1.
		
	self assert: (portfolio1 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:57' prior: 50562569!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  portfolio2 |
	
	self deposit100IntoAccount1.
	
	portfolio1 := Portfolio new.
	self addAccount1ToPortfolio1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:58' prior: 50562476!
test02PortfolioBalanceIncreasesWithOneAccount

	
	self deposit100IntoAccount1.
	
	self addAccount1ToPortfolio1.
	self assertPortfolio1BalanceIs: 100. 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:58' prior: 50562502!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  portfolio2 |
	
	self deposit100IntoAccount1.
	
	portfolio1 := Portfolio new.
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: portfolio1.
	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:58' prior: 50562409!
test13PortfolioHasTransactionsOfIndirectAccount

	| deposit|
	
	
	
	deposit := self deposit100IntoAccount1.
	
	p2 add: portfolio1 .
	self addAccount1ToPortfolio1.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:58' prior: 50563289!
test05PortfolioHasRegisteredSomeTransaction

	|  deposit |
	
	
	deposit := self deposit100IntoAccount1.
	
	
	self addAccount1ToPortfolio1.
	
	self assert: (portfolio1 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:58' prior: 50563486!
test06PortfolioHasNotRegisteredSomeTransaction

	| deposit |
	
	self deposit100IntoAccount1.
	
	self addAccount1ToPortfolio1.
	
	deposit:= Deposit for: 100.
	self deny: (portfolio1 hasRegistered: deposit)
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:58' prior: 50562552!
test14PortfolioHasTheLatestTransactionsOfDifferentAccounts

	| otheraccount otherdeposit deposit|
	
	otheraccount := ReceptiveAccount  new.
	deposit := self deposit100IntoAccount1.
	
	p2 add: portfolio1 .
	self addAccount1ToPortfolio1.
	p2 add: otheraccount.
		
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:13:58' prior: 50563216!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	self deposit100IntoAccount1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	portfolio2 := Portfolio new.
	
	
	portfolio2 add: account1; add: account2 .
	
	portfolio1 add: account3; add: portfolio2.
	
	self assertPortfolio1BalanceIs: 180 
! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:14:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:14:08'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:15:39' prior: 50564111!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	self deposit100IntoAccount1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 := Portfolio new.
	portfolio2 add: account3; add: account2 .
	
	self addAccount1ToPortfolio1And: portfolio2.
	
	self assertPortfolio1BalanceIs: 180 
! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:15:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:15:41'!
PASSED!
!Behavior method!
initialize
	(parents _ [
	(OrderedCollection
		cover: (24 to: 40)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 19)
		declaredAt: (13 to: 19).
	(transactions _ [
	(OrderedCollection
		cover: (64 to: 80)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{82 to: 84})
		cover: (48 to: 59)
		declaredAt: (48 to: 59).! !
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(assets _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (32 to: 37)
		declaredAt: (32 to: 37).! !
!Behavior method!
balance
	^ [
	(assets
		cover: (12 to: 17)
		declaredAt: (12 to: 17))
		sum: [ :each |
			[
			(each
				cover: (33 to: 36)
				declaredAt: (26 to: 29)) balance ] valueCoveringAll:
				{38 to: 44} ]
		ifEmpty: [
			0 coverAll:
				{57 to: 57} ]] valueCoveringAll:
		{19 to: 22. 47 to: 54}.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:15:51'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) addTransaction:
		(transaction
			cover: (109 to: 119)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 107}.
	^ transaction
		cover: (128 to: 138)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
addTransaction: aTransaction
	[
	(self coverAll:
		{31 to: 34}) addTransactionToAllTheAssetsIBelong:
		(aTransaction
			cover: (73 to: 84)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{36 to: 71}.
	[
	(transactions
		cover: (88 to: 99)
		declaredAt: (88 to: 99)) add:
		(aTransaction
			cover: (106 to: 117)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{101 to: 104}.! !
!Behavior method!
addTransactionToAllTheAssetsIBelong: aTransaction
	^ [
	(parents
		cover: (55 to: 61)
		declaredAt: (55 to: 61)) do: [ :parent |
		[
		(parent
			cover: (77 to: 82)
			declaredAt: (68 to: 73)) addTransactions:
			([
			(OrderedCollection
				cover: (102 to: 118)
				declaredAt: (102 to: 118)) with:
				(aTransaction
					cover: (126 to: 137)
					declaredAt: (38 to: 49)) ] valueCoveringAll:
				{120 to: 124}) ] valueCoveringAll:
			{84 to: 99} ]] valueCoveringAll:
		{63 to: 65}.! !
!Behavior method!
add: anAsset
	[
	(self coverAll:
		{15 to: 18}) raiseErrorIfCannotAdd:
		(anAsset
			cover: (43 to: 49)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{20 to: 41}.
	[
	(self coverAll:
		{53 to: 56}) safeAdd:
		(anAsset
			cover: (67 to: 73)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{58 to: 65}.
	[
	(self coverAll:
		{77 to: 80}) addTransactions:
		([
		(anAsset
			cover: (100 to: 106)
			declaredAt: (6 to: 12)) transactions ] valueCoveringAll:
			{108 to: 119}) ] valueCoveringAll:
		{82 to: 97}.! !
!Behavior method!
raiseErrorIfCannotAdd: anAsset
	^ [
	([
	(self coverAll:
		{37 to: 40}) canAdd:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (24 to: 30)) ] valueCoveringAll:
		{42 to: 48}) ifFalse: [
		[
		(self coverAll:
			{69 to: 72}) error:
			([
			([
			(self coverAll:
				{81 to: 84}) class ] valueCoveringAll:
				{86 to: 90}) cannotAddAssetErrorMessage ] valueCoveringAll:
				{92 to: 117}) ] valueCoveringAll:
			{74 to: 79} ]] valueCoveringAll:
		{59 to: 66}.! !
!Behavior method!
canAdd: anAsset
	^ [
	([
	(self coverAll:
		{22 to: 25}) isNotOneOfMyAssets:
		(anAsset
			cover: (47 to: 53)
			declaredAt: (9 to: 15)) ] valueCoveringAll:
		{27 to: 45}) and: [
		[
		(self coverAll:
			{65 to: 68}) canTheAssetsIBelongToAdd:
			(anAsset
				cover: (96 to: 102)
				declaredAt: (9 to: 15)) ] valueCoveringAll:
			{70 to: 94} ]] valueCoveringAll:
		{57 to: 60}.! !
!Behavior method!
isNotOneOfMyAssets: anAsset
	^ [
	([
	(self coverAll:
		{35 to: 38}) hasAsset:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (21 to: 27)) ] valueCoveringAll:
		{40 to: 48}) not ] valueCoveringAll:
		{60 to: 62}.! !
!Behavior method!
hasAsset: anAsset
	^ [
	([
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}) or: [
		[
		(self coverAll:
			{42 to: 45}) oneOfMyAssetsHas:
			(anAsset
				cover: (65 to: 71)
				declaredAt: (11 to: 17)) ] valueCoveringAll:
			{47 to: 63} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
oneOfMyAssetsHas: anAsset
	^ [
	(assets
		cover: (31 to: 36)
		declaredAt: (31 to: 36)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasAsset:
			(anAsset
				cover: (77 to: 83)
				declaredAt: (19 to: 25)) ] valueCoveringAll:
			{67 to: 75} ]] valueCoveringAll:
		{38 to: 48}.! !
!Behavior method!
canTheAssetsIBelongToAdd: anAsset
	^ [
	(parents
		cover: (39 to: 45)
		declaredAt: (39 to: 45)) allSatisfy: [ :parent |
		[
		(parent
			cover: (70 to: 75)
			declaredAt: (61 to: 66)) canAdd:
			(anAsset
				cover: (85 to: 91)
				declaredAt: (27 to: 33)) ] valueCoveringAll:
			{77 to: 83} ]] valueCoveringAll:
		{47 to: 57}.! !
!Behavior method!
safeAdd: anAsset
	[
	(anAsset
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) toBeAddedTo:
		(self coverAll:
			{41 to: 44}) ] valueCoveringAll:
		{28 to: 39}.
	[
	(assets
		cover: (48 to: 53)
		declaredAt: (48 to: 53)) add:
		(anAsset
			cover: (60 to: 66)
			declaredAt: (10 to: 16)) ] valueCoveringAll:
		{55 to: 58}.! !
!Behavior method!
toBeAddedTo: aParentPortfolio
	[
	(parents
		cover: (32 to: 38)
		declaredAt: (32 to: 38)) add:
		(aParentPortfolio
			cover: (45 to: 60)
			declaredAt: (14 to: 29)) ] valueCoveringAll:
		{40 to: 43}.! !
!Behavior method!
transactions
	^ transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30).! !
!Behavior method!
addTransactions: someTransactions
	[
	(self coverAll:
		{37 to: 40}) addTransactionsToAllTheAssetsIBelong:
		(someTransactions
			cover: (80 to: 95)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{42 to: 78}.
	[
	(transactions
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) addAll:
		(someTransactions
			cover: (120 to: 135)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{112 to: 118}.! !
!Behavior method!
addTransactionsToAllTheAssetsIBelong: someTransactions
	^ [
	(parents
		cover: (60 to: 66)
		declaredAt: (60 to: 66)) do: [ :parent |
		[
		(parent
			cover: (82 to: 87)
			declaredAt: (73 to: 78)) addTransactions:
			(someTransactions
				cover: (106 to: 121)
				declaredAt: (39 to: 54)) ] valueCoveringAll:
			{89 to: 104} ]] valueCoveringAll:
		{68 to: 70}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :acc :transaction |
			[
			(transaction
				cover: (63 to: 73)
				declaredAt: (48 to: 58)) addTransactionMarketValue:
				(acc
					cover: (102 to: 104)
					declaredAt: (43 to: 45)) ] valueCoveringAll:
				{75 to: 100} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) +
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !
!Behavior method!
value
	^ value
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:15:51'!
PASSED!
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
hasAsset: anAsset
	^ [
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) -
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:15:51'!
PASSED!
!Behavior method!
transactions
	^ transactions
		cover: (16 to: 27)
		declaredAt: (16 to: 27).! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:15:51'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(assets
		cover: (32 to: 37)
		declaredAt: (32 to: 37)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasRegistered:
			(aTransaction
				cover: (82 to: 93)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{67 to: 80} ]] valueCoveringAll:
		{39 to: 49}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:15:51'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:15:51'!
PASSED!
!Behavior method!
cannotAddAssetErrorMessage
	^ 'Cannot add duplicated asset' coverAll:
		{30 to: 58}.! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:15:51'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:15:51'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:15:51'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 02:15:52'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 02:15:52'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:16:48' prior: 50564029!
test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio

	|  portfolio2 |
	
	self deposit100IntoAccount1.
	self addAccount1ToPortfolio1.
	
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1.

	
	self should: 	[portfolio2 add: account1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:17:02' prior: 50564051!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  portfolio2 |
	
	self deposit100IntoAccount1.
	
	portfolio2 := Portfolio new.
	portfolio2 add: account1.
	portfolio2 add: portfolio1.
	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:17:31' prior: 50559435!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	|  portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	portfolio2 := Portfolio new.
	portfolio3 := Portfolio new.
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio6:= Portfolio new.
	
	portfolio6 add: portfolio3.
	portfolio1 add: portfolio3.
	portfolio3 add: portfolio4.
	portfolio1 add: portfolio2.
	portfolio2 add: portfolio5.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:19:37' prior: 50564095!
test14PortfolioHasTheLatestTransactionsOfDifferentAccounts

	| portfolio2 otheraccount otherdeposit deposit|
	
	otheraccount := ReceptiveAccount  new.
	deposit := self deposit100IntoAccount1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1 .
	self addAccount1ToPortfolio1.
	portfolio2 add: otheraccount.
		
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	self assert: (portfolio2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
! !

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:19:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:19:41'!
PASSED!
!PortfolioTest methodsFor: 'setUp' stamp: 's 10/15/2022 02:19:49' prior: 50562934 overrides: 16961394!
setUp
	
	account1 := ReceptiveAccount  new.
	portfolio1 := Portfolio new.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:19:52'!
ERROR!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:19:52'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:19:52'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:20:11' prior: 50564065!
test13PortfolioHasTransactionsOfIndirectAccount

	| deposit portfolio2 |
	
	
	
	deposit := self deposit100IntoAccount1.
	
	portfolio2 add: portfolio1 .
	self addAccount1ToPortfolio1.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:20:16'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:20:44' prior: 50564814!
test13PortfolioHasTransactionsOfIndirectAccount

	| deposit portfolio2 |
	
	
	
	deposit := self deposit100IntoAccount1.
	portfolio2 := Portfolio new.
	portfolio2 add: portfolio1 .
	self addAccount1ToPortfolio1.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:20:57' prior: 50564829!
test13PortfolioHasTransactionsOfIndirectAccount

	| deposit portfolio2 |
	
	
	
	deposit := self deposit100IntoAccount1.
	portfolio2 := Portfolio new; add: portfolio1 .
	self addAccount1ToPortfolio1.
		
	self assert: (p2 transactions) equals: (OrderedCollection with: deposit). 
! !
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:21:15' prior: 50564841!
test13PortfolioHasTransactionsOfIndirectAccount

	| deposit portfolio2 |
	
	
	
	deposit := self deposit100IntoAccount1.
	portfolio2 := Portfolio new; add: portfolio1 .
	self addAccount1ToPortfolio1.
		
	self assert: (portfolio2 transactions) equals: (OrderedCollection with: deposit). 
! !

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:21:18'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:21:42' prior: 50564853!
test13PortfolioHasTransactionsOfIndirectAccount

	| deposit portfolio2 |
	
	
	
	deposit := self deposit100IntoAccount1.
	portfolio2 := Portfolio with: portfolio1 .
	self addAccount1ToPortfolio1.
		
	self assert: (portfolio2 transactions) equals: (OrderedCollection with: deposit). 
! !
!Portfolio class methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:23:46'!
with: anAsset
	|portfolio|
	portfolio := self new.
	portfolio add: anAsset .
	^portfolio .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:24:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:24:08'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:26:40' prior: 50564658!
test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio

	|  portfolio2 portfolio3 portfolio4 portfolio5 portfolio6 |
	
	
	portfolio4 := Portfolio new.
	portfolio5 := Portfolio new.
	portfolio2 := Portfolio with: portfolio5 .
	portfolio3 := Portfolio with: portfolio4 .
	portfolio6:= Portfolio with: portfolio3.
	portfolio1 add: portfolio3.
	portfolio1 add: portfolio2.
	
	
	self should: 	[portfolio4 add: portfolio5.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:27:01'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:27:01'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:27:02'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:27:02'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:27:55' prior: 50564645!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  portfolio2 |
	
	self deposit100IntoAccount1.
	
	portfolio2 := Portfolio with: account1; add: portfolio1.
	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:28:09'!
ERROR!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:28:40' prior: 50565014!
test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio

	|  portfolio2 |
	
	self deposit100IntoAccount1.
	
	portfolio2 := Portfolio with: account1.
	portfolio2 add: portfolio1.
	
	self should: 	[self addAccount1ToPortfolio1.] 
	raise: Error
	withMessageText: Portfolio cannotAddAssetErrorMessage .! !

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:28:42'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:28:42'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 02:31:56' prior: 50564184!
test04PortfolioBalanceWithMultipleAccountsAndPortfolio

	|  portfolio2  account2 account3 |
	
	
	self deposit100IntoAccount1.
	
	account2 := ReceptiveAccount  new.
	Withdraw register: 100 on: account2.
	
	
	account3 := ReceptiveAccount  new.
	Deposit register: 180 on: account3.
	
	portfolio2 := Portfolio with: account2 .
	portfolio2 add: account3.
	
	self addAccount1ToPortfolio1And: portfolio2.
	
	self assertPortfolio1BalanceIs: 180 
! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:31:57'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:31:57'!
PASSED!
!Behavior method!
initialize
	(parents _ [
	(OrderedCollection
		cover: (24 to: 40)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 19)
		declaredAt: (13 to: 19).
	(transactions _ [
	(OrderedCollection
		cover: (64 to: 80)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{82 to: 84})
		cover: (48 to: 59)
		declaredAt: (48 to: 59).! !
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(assets _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (32 to: 37)
		declaredAt: (32 to: 37).! !
!Behavior method!
balance
	^ [
	(assets
		cover: (12 to: 17)
		declaredAt: (12 to: 17))
		sum: [ :each |
			[
			(each
				cover: (33 to: 36)
				declaredAt: (26 to: 29)) balance ] valueCoveringAll:
				{38 to: 44} ]
		ifEmpty: [
			0 coverAll:
				{57 to: 57} ]] valueCoveringAll:
		{19 to: 22. 47 to: 54}.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:32:40'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) addTransaction:
		(transaction
			cover: (109 to: 119)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 107}.
	^ transaction
		cover: (128 to: 138)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
addTransaction: aTransaction
	[
	(self coverAll:
		{31 to: 34}) addTransactionToAllTheAssetsIBelong:
		(aTransaction
			cover: (73 to: 84)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{36 to: 71}.
	[
	(transactions
		cover: (88 to: 99)
		declaredAt: (88 to: 99)) add:
		(aTransaction
			cover: (106 to: 117)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{101 to: 104}.! !
!Behavior method!
addTransactionToAllTheAssetsIBelong: aTransaction
	^ [
	(parents
		cover: (55 to: 61)
		declaredAt: (55 to: 61)) do: [ :parent |
		[
		(parent
			cover: (77 to: 82)
			declaredAt: (68 to: 73)) addTransactions:
			([
			(OrderedCollection
				cover: (102 to: 118)
				declaredAt: (102 to: 118)) with:
				(aTransaction
					cover: (126 to: 137)
					declaredAt: (38 to: 49)) ] valueCoveringAll:
				{120 to: 124}) ] valueCoveringAll:
			{84 to: 99} ]] valueCoveringAll:
		{63 to: 65}.! !
!Behavior method!
add: anAsset
	[
	(self coverAll:
		{15 to: 18}) raiseErrorIfCannotAdd:
		(anAsset
			cover: (43 to: 49)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{20 to: 41}.
	[
	(self coverAll:
		{53 to: 56}) safeAdd:
		(anAsset
			cover: (67 to: 73)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{58 to: 65}.
	[
	(self coverAll:
		{77 to: 80}) addTransactions:
		([
		(anAsset
			cover: (100 to: 106)
			declaredAt: (6 to: 12)) transactions ] valueCoveringAll:
			{108 to: 119}) ] valueCoveringAll:
		{82 to: 97}.! !
!Behavior method!
raiseErrorIfCannotAdd: anAsset
	^ [
	([
	(self coverAll:
		{37 to: 40}) canAdd:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (24 to: 30)) ] valueCoveringAll:
		{42 to: 48}) ifFalse: [
		[
		(self coverAll:
			{69 to: 72}) error:
			([
			([
			(self coverAll:
				{81 to: 84}) class ] valueCoveringAll:
				{86 to: 90}) cannotAddAssetErrorMessage ] valueCoveringAll:
				{92 to: 117}) ] valueCoveringAll:
			{74 to: 79} ]] valueCoveringAll:
		{59 to: 66}.! !
!Behavior method!
canAdd: anAsset
	^ [
	([
	(self coverAll:
		{22 to: 25}) isNotOneOfMyAssets:
		(anAsset
			cover: (47 to: 53)
			declaredAt: (9 to: 15)) ] valueCoveringAll:
		{27 to: 45}) and: [
		[
		(self coverAll:
			{65 to: 68}) canTheAssetsIBelongToAdd:
			(anAsset
				cover: (96 to: 102)
				declaredAt: (9 to: 15)) ] valueCoveringAll:
			{70 to: 94} ]] valueCoveringAll:
		{57 to: 60}.! !
!Behavior method!
isNotOneOfMyAssets: anAsset
	^ [
	([
	(self coverAll:
		{35 to: 38}) hasAsset:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (21 to: 27)) ] valueCoveringAll:
		{40 to: 48}) not ] valueCoveringAll:
		{60 to: 62}.! !
!Behavior method!
hasAsset: anAsset
	^ [
	([
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}) or: [
		[
		(self coverAll:
			{42 to: 45}) oneOfMyAssetsHas:
			(anAsset
				cover: (65 to: 71)
				declaredAt: (11 to: 17)) ] valueCoveringAll:
			{47 to: 63} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
oneOfMyAssetsHas: anAsset
	^ [
	(assets
		cover: (31 to: 36)
		declaredAt: (31 to: 36)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasAsset:
			(anAsset
				cover: (77 to: 83)
				declaredAt: (19 to: 25)) ] valueCoveringAll:
			{67 to: 75} ]] valueCoveringAll:
		{38 to: 48}.! !
!Behavior method!
canTheAssetsIBelongToAdd: anAsset
	^ [
	(parents
		cover: (39 to: 45)
		declaredAt: (39 to: 45)) allSatisfy: [ :parent |
		[
		(parent
			cover: (70 to: 75)
			declaredAt: (61 to: 66)) canAdd:
			(anAsset
				cover: (85 to: 91)
				declaredAt: (27 to: 33)) ] valueCoveringAll:
			{77 to: 83} ]] valueCoveringAll:
		{47 to: 57}.! !
!Behavior method!
safeAdd: anAsset
	[
	(anAsset
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) toBeAddedTo:
		(self coverAll:
			{41 to: 44}) ] valueCoveringAll:
		{28 to: 39}.
	[
	(assets
		cover: (48 to: 53)
		declaredAt: (48 to: 53)) add:
		(anAsset
			cover: (60 to: 66)
			declaredAt: (10 to: 16)) ] valueCoveringAll:
		{55 to: 58}.! !
!Behavior method!
toBeAddedTo: aParentPortfolio
	[
	(parents
		cover: (32 to: 38)
		declaredAt: (32 to: 38)) add:
		(aParentPortfolio
			cover: (45 to: 60)
			declaredAt: (14 to: 29)) ] valueCoveringAll:
		{40 to: 43}.! !
!Behavior method!
transactions
	^ transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30).! !
!Behavior method!
addTransactions: someTransactions
	[
	(self coverAll:
		{37 to: 40}) addTransactionsToAllTheAssetsIBelong:
		(someTransactions
			cover: (80 to: 95)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{42 to: 78}.
	[
	(transactions
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) addAll:
		(someTransactions
			cover: (120 to: 135)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{112 to: 118}.! !
!Behavior method!
addTransactionsToAllTheAssetsIBelong: someTransactions
	^ [
	(parents
		cover: (60 to: 66)
		declaredAt: (60 to: 66)) do: [ :parent |
		[
		(parent
			cover: (82 to: 87)
			declaredAt: (73 to: 78)) addTransactions:
			(someTransactions
				cover: (106 to: 121)
				declaredAt: (39 to: 54)) ] valueCoveringAll:
			{89 to: 104} ]] valueCoveringAll:
		{68 to: 70}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :acc :transaction |
			[
			(transaction
				cover: (63 to: 73)
				declaredAt: (48 to: 58)) addTransactionMarketValue:
				(acc
					cover: (102 to: 104)
					declaredAt: (43 to: 45)) ] valueCoveringAll:
				{75 to: 100} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) +
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !
!Behavior method!
value
	^ value
		cover: (9 to: 13)
		declaredAt: (9 to: 13).! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:32:41'!
PASSED!
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
hasAsset: anAsset
	^ [
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) -
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:32:41'!
PASSED!
!Behavior method!
with: anAsset
	| portfolio |
	(portfolio _ [
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49})
		cover: (29 to: 37)
		declaredAt: (17 to: 25).
	[
	(portfolio
		cover: (53 to: 61)
		declaredAt: (17 to: 25)) add:
		(anAsset
			cover: (68 to: 74)
			declaredAt: (7 to: 13)) ] valueCoveringAll:
		{63 to: 66}.
	^ portfolio
		cover: (80 to: 88)
		declaredAt: (17 to: 25).! !
!Behavior method!
transactions
	^ transactions
		cover: (16 to: 27)
		declaredAt: (16 to: 27).! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:32:41'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(assets
		cover: (32 to: 37)
		declaredAt: (32 to: 37)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasRegistered:
			(aTransaction
				cover: (82 to: 93)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{67 to: 80} ]] valueCoveringAll:
		{39 to: 49}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:32:41'!
PASSED!
!Behavior method!
cannotAddAssetErrorMessage
	^ 'Cannot add duplicated asset' coverAll:
		{30 to: 58}.! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 02:32:41'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 02:32:41'!
PASSED!

!methodRemoval: Deposit #value stamp: 's 10/15/2022 02:34:13'!
value
	^value!
!AccountTransaction methodsFor: 'initialization' stamp: 's 10/15/2022 02:34:48'!
initializeFor: aValue

	value := aValue ! !

!methodRemoval: Deposit #initializeFor: stamp: 's 10/15/2022 02:34:48'!
initializeFor: aValue

	value := aValue !
!AccountTransaction methodsFor: 'initialization' stamp: 's 10/15/2022 02:35:01' prior: 50565563!
initializeFor: aValue

	value := aValue ! !

!methodRemoval: Withdraw #initializeFor: stamp: 's 10/15/2022 02:35:01'!
initializeFor: aValue

	value := aValue !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 02:35:13'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 02:35:13'!
PASSED!
!FinancialAsset methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:37:00'!
hasAsset: anAsset
	self subclassResponsibility .! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 02:37:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 02:37:08'!
PASSED!
!ReceptiveAccountTest methodsFor: 'common actions' stamp: 's 10/15/2022 02:43:32'!
deposit100IntoAccount

	^ Deposit register: 100 on: account! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:43:32' prior: 50557859!
test02DepositIncreasesBalanceOnTransactionValue 

	
	self deposit100IntoAccount.
		
	self assertAccountBalanceIs: 100.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:43:33' prior: 50557952!
test07AccountKnowsItsTransactions 

	| deposit1 |
	
	account := ReceptiveAccount new.
	
	deposit1 := self deposit100IntoAccount.
		
	self assert: 1 equals: account transactions size.
	self assert: (account transactions includes: deposit1).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:43:33' prior: 50557922!
test05ReceptiveAccountKnowsRegisteredTransactions 

		
	self assert: (account hasRegistered: self deposit100IntoAccount).
	self assert: (account hasRegistered: self withdraw50).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:43:33' prior: 50557898!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100IntoAccount.
	self withdraw50 .
		
	self assertAccountBalanceIs: 50.
! !

!methodRemoval: ReceptiveAccountTest #deposit100 stamp: 's 10/15/2022 02:43:33'!
deposit100

	^ Deposit register: 100 on: account!
!ReceptiveAccountTest methodsFor: 'common actions' stamp: 's 10/15/2022 02:43:55'!
withdraw50OfAccount

	^ self withdraw: 50! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:43:56' prior: 50565766!
test05ReceptiveAccountKnowsRegisteredTransactions 

		
	self assert: (account hasRegistered: self deposit100IntoAccount).
	self assert: (account hasRegistered: self withdraw50OfAccount).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:43:56' prior: 50565775!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100IntoAccount.
	self withdraw50OfAccount .
		
	self assertAccountBalanceIs: 50.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:43:56' prior: 50557905!
test04WithdrawValueMustBePositive 
	
	self assert: 50 equals: (self withdraw50OfAccount) value
! !

!methodRemoval: ReceptiveAccountTest #withdraw50 stamp: 's 10/15/2022 02:43:56'!
withdraw50

	^ self withdraw: 50!
!ReceptiveAccountTest methodsFor: 'common actions' stamp: 's 10/15/2022 02:44:32'!
accountWithdraw: withdrawValue

	^ Withdraw register: withdrawValue on: account! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:44:32' prior: 50565787!
withdraw50OfAccount

	^ self accountWithdraw: 50! !

!methodRemoval: ReceptiveAccountTest #withdraw: stamp: 's 10/15/2022 02:44:32'!
withdraw: withdrawValue

	^ Withdraw register: withdrawValue on: account!
!ReceptiveAccountTest methodsFor: 'common actions' stamp: 's 10/15/2022 02:44:57'!
withdraw50FromAccount

	^ self accountWithdraw: 50! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:44:57' prior: 50565802!
test03WithdrawDecreasesBalanceOnTransactionValue 

	self deposit100IntoAccount.
	self withdraw50FromAccount .
		
	self assertAccountBalanceIs: 50.
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:44:57' prior: 50565792!
test05ReceptiveAccountKnowsRegisteredTransactions 

		
	self assert: (account hasRegistered: self deposit100IntoAccount).
	self assert: (account hasRegistered: self withdraw50FromAccount).
! !
!ReceptiveAccountTest methodsFor: 'as yet unclassified' stamp: 's 10/15/2022 02:44:57' prior: 50565810!
test04WithdrawValueMustBePositive 
	
	self assert: 50 equals: (self withdraw50FromAccount) value
! !

!methodRemoval: ReceptiveAccountTest #withdraw50OfAccount stamp: 's 10/15/2022 02:44:57'!
withdraw50OfAccount

	^ self accountWithdraw: 50!

----SNAPSHOT----(15 October 2022 02:45:12) CuisUniversity-5466.image priorSource: 7293507!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 02:45:53'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 02:45:53'!
PASSED!
!Behavior method!
initialize
	(parents _ [
	(OrderedCollection
		cover: (24 to: 40)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 19)
		declaredAt: (13 to: 19).
	(transactions _ [
	(OrderedCollection
		cover: (64 to: 80)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{82 to: 84})
		cover: (48 to: 59)
		declaredAt: (48 to: 59).! !
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(assets _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (32 to: 37)
		declaredAt: (32 to: 37).! !
!Behavior method!
balance
	^ [
	(assets
		cover: (12 to: 17)
		declaredAt: (12 to: 17))
		sum: [ :each |
			[
			(each
				cover: (33 to: 36)
				declaredAt: (26 to: 29)) balance ] valueCoveringAll:
				{38 to: 44} ]
		ifEmpty: [
			0 coverAll:
				{57 to: 57} ]] valueCoveringAll:
		{19 to: 22. 47 to: 54}.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 02:46:08'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) addTransaction:
		(transaction
			cover: (109 to: 119)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 107}.
	^ transaction
		cover: (128 to: 138)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
addTransaction: aTransaction
	[
	(self coverAll:
		{31 to: 34}) addTransactionToAllTheAssetsIBelong:
		(aTransaction
			cover: (73 to: 84)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{36 to: 71}.
	[
	(transactions
		cover: (88 to: 99)
		declaredAt: (88 to: 99)) add:
		(aTransaction
			cover: (106 to: 117)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{101 to: 104}.! !
!Behavior method!
addTransactionToAllTheAssetsIBelong: aTransaction
	^ [
	(parents
		cover: (55 to: 61)
		declaredAt: (55 to: 61)) do: [ :parent |
		[
		(parent
			cover: (77 to: 82)
			declaredAt: (68 to: 73)) addTransactions:
			([
			(OrderedCollection
				cover: (102 to: 118)
				declaredAt: (102 to: 118)) with:
				(aTransaction
					cover: (126 to: 137)
					declaredAt: (38 to: 49)) ] valueCoveringAll:
				{120 to: 124}) ] valueCoveringAll:
			{84 to: 99} ]] valueCoveringAll:
		{63 to: 65}.! !
!Behavior method!
add: anAsset
	[
	(self coverAll:
		{15 to: 18}) raiseErrorIfCannotAdd:
		(anAsset
			cover: (43 to: 49)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{20 to: 41}.
	[
	(self coverAll:
		{53 to: 56}) safeAdd:
		(anAsset
			cover: (67 to: 73)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{58 to: 65}.
	[
	(self coverAll:
		{77 to: 80}) addTransactions:
		([
		(anAsset
			cover: (100 to: 106)
			declaredAt: (6 to: 12)) transactions ] valueCoveringAll:
			{108 to: 119}) ] valueCoveringAll:
		{82 to: 97}.! !
!Behavior method!
raiseErrorIfCannotAdd: anAsset
	^ [
	([
	(self coverAll:
		{37 to: 40}) canAdd:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (24 to: 30)) ] valueCoveringAll:
		{42 to: 48}) ifFalse: [
		[
		(self coverAll:
			{69 to: 72}) error:
			([
			([
			(self coverAll:
				{81 to: 84}) class ] valueCoveringAll:
				{86 to: 90}) cannotAddAssetErrorMessage ] valueCoveringAll:
				{92 to: 117}) ] valueCoveringAll:
			{74 to: 79} ]] valueCoveringAll:
		{59 to: 66}.! !
!Behavior method!
canAdd: anAsset
	^ [
	([
	(self coverAll:
		{22 to: 25}) isNotOneOfMyAssets:
		(anAsset
			cover: (47 to: 53)
			declaredAt: (9 to: 15)) ] valueCoveringAll:
		{27 to: 45}) and: [
		[
		(self coverAll:
			{65 to: 68}) canTheAssetsIBelongToAdd:
			(anAsset
				cover: (96 to: 102)
				declaredAt: (9 to: 15)) ] valueCoveringAll:
			{70 to: 94} ]] valueCoveringAll:
		{57 to: 60}.! !
!Behavior method!
isNotOneOfMyAssets: anAsset
	^ [
	([
	(self coverAll:
		{35 to: 38}) hasAsset:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (21 to: 27)) ] valueCoveringAll:
		{40 to: 48}) not ] valueCoveringAll:
		{60 to: 62}.! !
!Behavior method!
hasAsset: anAsset
	^ [
	([
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}) or: [
		[
		(self coverAll:
			{42 to: 45}) oneOfMyAssetsHas:
			(anAsset
				cover: (65 to: 71)
				declaredAt: (11 to: 17)) ] valueCoveringAll:
			{47 to: 63} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
oneOfMyAssetsHas: anAsset
	^ [
	(assets
		cover: (31 to: 36)
		declaredAt: (31 to: 36)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasAsset:
			(anAsset
				cover: (77 to: 83)
				declaredAt: (19 to: 25)) ] valueCoveringAll:
			{67 to: 75} ]] valueCoveringAll:
		{38 to: 48}.! !
!Behavior method!
canTheAssetsIBelongToAdd: anAsset
	^ [
	(parents
		cover: (39 to: 45)
		declaredAt: (39 to: 45)) allSatisfy: [ :parent |
		[
		(parent
			cover: (70 to: 75)
			declaredAt: (61 to: 66)) canAdd:
			(anAsset
				cover: (85 to: 91)
				declaredAt: (27 to: 33)) ] valueCoveringAll:
			{77 to: 83} ]] valueCoveringAll:
		{47 to: 57}.! !
!Behavior method!
safeAdd: anAsset
	[
	(anAsset
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) toBeAddedTo:
		(self coverAll:
			{41 to: 44}) ] valueCoveringAll:
		{28 to: 39}.
	[
	(assets
		cover: (48 to: 53)
		declaredAt: (48 to: 53)) add:
		(anAsset
			cover: (60 to: 66)
			declaredAt: (10 to: 16)) ] valueCoveringAll:
		{55 to: 58}.! !
!Behavior method!
toBeAddedTo: aParentPortfolio
	[
	(parents
		cover: (32 to: 38)
		declaredAt: (32 to: 38)) add:
		(aParentPortfolio
			cover: (45 to: 60)
			declaredAt: (14 to: 29)) ] valueCoveringAll:
		{40 to: 43}.! !
!Behavior method!
transactions
	^ transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30).! !
!Behavior method!
addTransactions: someTransactions
	[
	(self coverAll:
		{37 to: 40}) addTransactionsToAllTheAssetsIBelong:
		(someTransactions
			cover: (80 to: 95)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{42 to: 78}.
	[
	(transactions
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) addAll:
		(someTransactions
			cover: (120 to: 135)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{112 to: 118}.! !
!Behavior method!
addTransactionsToAllTheAssetsIBelong: someTransactions
	^ [
	(parents
		cover: (60 to: 66)
		declaredAt: (60 to: 66)) do: [ :parent |
		[
		(parent
			cover: (82 to: 87)
			declaredAt: (73 to: 78)) addTransactions:
			(someTransactions
				cover: (106 to: 121)
				declaredAt: (39 to: 54)) ] valueCoveringAll:
			{89 to: 104} ]] valueCoveringAll:
		{68 to: 70}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :acc :transaction |
			[
			(transaction
				cover: (63 to: 73)
				declaredAt: (48 to: 58)) addTransactionMarketValue:
				(acc
					cover: (102 to: 104)
					declaredAt: (43 to: 45)) ] valueCoveringAll:
				{75 to: 100} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) +
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 02:46:08'!
PASSED!
!Behavior method!
hasAsset: anAsset
	^ [
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) -
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 02:46:08'!
PASSED!
!Behavior method!
with: anAsset
	| portfolio |
	(portfolio _ [
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49})
		cover: (29 to: 37)
		declaredAt: (17 to: 25).
	[
	(portfolio
		cover: (53 to: 61)
		declaredAt: (17 to: 25)) add:
		(anAsset
			cover: (68 to: 74)
			declaredAt: (7 to: 13)) ] valueCoveringAll:
		{63 to: 66}.
	^ portfolio
		cover: (80 to: 88)
		declaredAt: (17 to: 25).! !
!Behavior method!
transactions
	^ transactions
		cover: (16 to: 27)
		declaredAt: (16 to: 27).! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 02:46:08'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(assets
		cover: (32 to: 37)
		declaredAt: (32 to: 37)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasRegistered:
			(aTransaction
				cover: (82 to: 93)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{67 to: 80} ]] valueCoveringAll:
		{39 to: 49}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 02:46:08'!
PASSED!
!Behavior method!
cannotAddAssetErrorMessage
	^ 'Cannot add duplicated asset' coverAll:
		{30 to: 58}.! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 02:46:08'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 02:46:08'!
PASSED!

----SNAPSHOT----(15 October 2022 02:46:17) CuisUniversity-5466.image priorSource: 7494993!

----STARTUP---- (15 October 2022 12:52:23) as /Users/simonlew/Documents/ISW/mac/CuisUniversity-5466.image!

!FinancialAsset methodsFor: 'accesing' stamp: 's 10/15/2022 12:54:45' prior: 50558363!
transactions
	^transactions.! !

!methodRemoval: Portfolio #transactions stamp: 's 10/15/2022 12:54:45'!
transactions
	^transactions.!
!FinancialAsset methodsFor: 'accessing' stamp: 's 10/15/2022 12:54:57' prior: 50566337!
transactions 

	^ transactions.! !

!methodRemoval: ReceptiveAccount #transactions stamp: 's 10/15/2022 12:54:57'!
transactions 

	^ transactions.!
!Behavior method!
initialize
	(parents _ [
	(OrderedCollection
		cover: (24 to: 40)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 19)
		declaredAt: (13 to: 19).
	(transactions _ [
	(OrderedCollection
		cover: (64 to: 80)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{82 to: 84})
		cover: (48 to: 59)
		declaredAt: (48 to: 59).! !
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(assets _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (32 to: 37)
		declaredAt: (32 to: 37).! !
!Behavior method!
balance
	^ [
	(assets
		cover: (12 to: 17)
		declaredAt: (12 to: 17))
		sum: [ :each |
			[
			(each
				cover: (33 to: 36)
				declaredAt: (26 to: 29)) balance ] valueCoveringAll:
				{38 to: 44} ]
		ifEmpty: [
			0 coverAll:
				{57 to: 57} ]] valueCoveringAll:
		{19 to: 22. 47 to: 54}.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 12:55:05'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) addTransaction:
		(transaction
			cover: (109 to: 119)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 107}.
	^ transaction
		cover: (128 to: 138)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
addTransaction: aTransaction
	[
	(self coverAll:
		{31 to: 34}) addTransactionToAllTheAssetsIBelong:
		(aTransaction
			cover: (73 to: 84)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{36 to: 71}.
	[
	(transactions
		cover: (88 to: 99)
		declaredAt: (88 to: 99)) add:
		(aTransaction
			cover: (106 to: 117)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{101 to: 104}.! !
!Behavior method!
addTransactionToAllTheAssetsIBelong: aTransaction
	^ [
	(parents
		cover: (55 to: 61)
		declaredAt: (55 to: 61)) do: [ :parent |
		[
		(parent
			cover: (77 to: 82)
			declaredAt: (68 to: 73)) addTransactions:
			([
			(OrderedCollection
				cover: (102 to: 118)
				declaredAt: (102 to: 118)) with:
				(aTransaction
					cover: (126 to: 137)
					declaredAt: (38 to: 49)) ] valueCoveringAll:
				{120 to: 124}) ] valueCoveringAll:
			{84 to: 99} ]] valueCoveringAll:
		{63 to: 65}.! !
!Behavior method!
add: anAsset
	[
	(self coverAll:
		{15 to: 18}) raiseErrorIfCannotAdd:
		(anAsset
			cover: (43 to: 49)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{20 to: 41}.
	[
	(self coverAll:
		{53 to: 56}) safeAdd:
		(anAsset
			cover: (67 to: 73)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{58 to: 65}.
	[
	(self coverAll:
		{77 to: 80}) addTransactions:
		([
		(anAsset
			cover: (100 to: 106)
			declaredAt: (6 to: 12)) transactions ] valueCoveringAll:
			{108 to: 119}) ] valueCoveringAll:
		{82 to: 97}.! !
!Behavior method!
raiseErrorIfCannotAdd: anAsset
	^ [
	([
	(self coverAll:
		{37 to: 40}) canAdd:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (24 to: 30)) ] valueCoveringAll:
		{42 to: 48}) ifFalse: [
		[
		(self coverAll:
			{69 to: 72}) error:
			([
			([
			(self coverAll:
				{81 to: 84}) class ] valueCoveringAll:
				{86 to: 90}) cannotAddAssetErrorMessage ] valueCoveringAll:
				{92 to: 117}) ] valueCoveringAll:
			{74 to: 79} ]] valueCoveringAll:
		{59 to: 66}.! !
!Behavior method!
canAdd: anAsset
	^ [
	([
	(self coverAll:
		{22 to: 25}) isNotOneOfMyAssets:
		(anAsset
			cover: (47 to: 53)
			declaredAt: (9 to: 15)) ] valueCoveringAll:
		{27 to: 45}) and: [
		[
		(self coverAll:
			{65 to: 68}) canTheAssetsIBelongToAdd:
			(anAsset
				cover: (96 to: 102)
				declaredAt: (9 to: 15)) ] valueCoveringAll:
			{70 to: 94} ]] valueCoveringAll:
		{57 to: 60}.! !
!Behavior method!
isNotOneOfMyAssets: anAsset
	^ [
	([
	(self coverAll:
		{35 to: 38}) hasAsset:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (21 to: 27)) ] valueCoveringAll:
		{40 to: 48}) not ] valueCoveringAll:
		{60 to: 62}.! !
!Behavior method!
hasAsset: anAsset
	^ [
	([
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}) or: [
		[
		(self coverAll:
			{42 to: 45}) oneOfMyAssetsHas:
			(anAsset
				cover: (65 to: 71)
				declaredAt: (11 to: 17)) ] valueCoveringAll:
			{47 to: 63} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
oneOfMyAssetsHas: anAsset
	^ [
	(assets
		cover: (31 to: 36)
		declaredAt: (31 to: 36)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasAsset:
			(anAsset
				cover: (77 to: 83)
				declaredAt: (19 to: 25)) ] valueCoveringAll:
			{67 to: 75} ]] valueCoveringAll:
		{38 to: 48}.! !
!Behavior method!
canTheAssetsIBelongToAdd: anAsset
	^ [
	(parents
		cover: (39 to: 45)
		declaredAt: (39 to: 45)) allSatisfy: [ :parent |
		[
		(parent
			cover: (70 to: 75)
			declaredAt: (61 to: 66)) canAdd:
			(anAsset
				cover: (85 to: 91)
				declaredAt: (27 to: 33)) ] valueCoveringAll:
			{77 to: 83} ]] valueCoveringAll:
		{47 to: 57}.! !
!Behavior method!
safeAdd: anAsset
	[
	(anAsset
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) toBeAddedTo:
		(self coverAll:
			{41 to: 44}) ] valueCoveringAll:
		{28 to: 39}.
	[
	(assets
		cover: (48 to: 53)
		declaredAt: (48 to: 53)) add:
		(anAsset
			cover: (60 to: 66)
			declaredAt: (10 to: 16)) ] valueCoveringAll:
		{55 to: 58}.! !
!Behavior method!
toBeAddedTo: aParentPortfolio
	[
	(parents
		cover: (32 to: 38)
		declaredAt: (32 to: 38)) add:
		(aParentPortfolio
			cover: (45 to: 60)
			declaredAt: (14 to: 29)) ] valueCoveringAll:
		{40 to: 43}.! !
!Behavior method!
transactions
	^ transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30).! !
!Behavior method!
addTransactions: someTransactions
	[
	(self coverAll:
		{37 to: 40}) addTransactionsToAllTheAssetsIBelong:
		(someTransactions
			cover: (80 to: 95)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{42 to: 78}.
	[
	(transactions
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) addAll:
		(someTransactions
			cover: (120 to: 135)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{112 to: 118}.! !
!Behavior method!
addTransactionsToAllTheAssetsIBelong: someTransactions
	^ [
	(parents
		cover: (60 to: 66)
		declaredAt: (60 to: 66)) do: [ :parent |
		[
		(parent
			cover: (82 to: 87)
			declaredAt: (73 to: 78)) addTransactions:
			(someTransactions
				cover: (106 to: 121)
				declaredAt: (39 to: 54)) ] valueCoveringAll:
			{89 to: 104} ]] valueCoveringAll:
		{68 to: 70}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :acc :transaction |
			[
			(transaction
				cover: (63 to: 73)
				declaredAt: (48 to: 58)) addTransactionMarketValue:
				(acc
					cover: (102 to: 104)
					declaredAt: (43 to: 45)) ] valueCoveringAll:
				{75 to: 100} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) +
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 12:55:05'!
PASSED!
!Behavior method!
hasAsset: anAsset
	^ [
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) -
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 12:55:05'!
PASSED!
!Behavior method!
with: anAsset
	| portfolio |
	(portfolio _ [
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49})
		cover: (29 to: 37)
		declaredAt: (17 to: 25).
	[
	(portfolio
		cover: (53 to: 61)
		declaredAt: (17 to: 25)) add:
		(anAsset
			cover: (68 to: 74)
			declaredAt: (7 to: 13)) ] valueCoveringAll:
		{63 to: 66}.
	^ portfolio
		cover: (80 to: 88)
		declaredAt: (17 to: 25).! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 12:55:05'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(assets
		cover: (32 to: 37)
		declaredAt: (32 to: 37)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasRegistered:
			(aTransaction
				cover: (82 to: 93)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{67 to: 80} ]] valueCoveringAll:
		{39 to: 49}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 12:55:05'!
PASSED!
!Behavior method!
cannotAddAssetErrorMessage
	^ 'Cannot add duplicated asset' coverAll:
		{30 to: 58}.! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 12:55:05'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 12:55:11'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 12:56:31'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 12:56:31'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/15/2022 12:59:08' prior: 50557941!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	
	
		
	self deny: (account hasRegistered: (Deposit for: 200)).
	self deny: (account hasRegistered: (Withdraw for: 50)).
! !

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 12:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 12:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 12:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 12:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 12:59:17'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 12:59:17'!
PASSED!
!ReceptiveAccountTest methodsFor: 'tests' stamp: 's 10/15/2022 12:59:42' prior: 50566886!
test06ReceptiveAccountDoNotKnowNotRegisteredTransactions

	| deposit withdraw |
	
	deposit :=  Deposit for: 200.
	withdraw := Withdraw for: 50.
		
	self deny: (account hasRegistered: deposit).
	self deny: (account hasRegistered: withdraw).
! !

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 12:59:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 12:59:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:59:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 12:59:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 12:59:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 12:59:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 12:59:46'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 12:59:46'!
PASSED!
!PortfolioTest methodsFor: 'tests' stamp: 's 10/15/2022 13:04:14' prior: 50564678!
test14PortfolioHasTheLatestTransactionsOfDifferentAccounts

	| portfolio2 otheraccount otherdeposit deposit|
	
	portfolio2 := Portfolio new.
	
	portfolio2 add: portfolio1.
	deposit := self deposit100IntoAccount1.
	self addAccount1ToPortfolio1.
	
	otheraccount := ReceptiveAccount  new.
	portfolio2 add: otheraccount.
	otherdeposit := Deposit register: 50 on: otheraccount.
	
	self assert: (portfolio2 transactions) equals: (OrderedCollection with: deposit with:otherdeposit ). 
! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 13:04:20'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 13:04:20'!
PASSED!
!Behavior method!
initialize
	(parents _ [
	(OrderedCollection
		cover: (24 to: 40)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{42 to: 44})
		cover: (13 to: 19)
		declaredAt: (13 to: 19).
	(transactions _ [
	(OrderedCollection
		cover: (64 to: 80)
		declaredAt: (24 to: 40)) new ] valueCoveringAll:
		{82 to: 84})
		cover: (48 to: 59)
		declaredAt: (48 to: 59).! !
!Behavior method!
initialize
	[ super initialize ] valueCoveringAll:
		{19 to: 28}.
	(assets _ [
	(OrderedCollection
		cover: (41 to: 57)
		declaredAt: (41 to: 57)) new ] valueCoveringAll:
		{59 to: 61})
		cover: (32 to: 37)
		declaredAt: (32 to: 37).! !
!Behavior method!
balance
	^ [
	(assets
		cover: (12 to: 17)
		declaredAt: (12 to: 17))
		sum: [ :each |
			[
			(each
				cover: (33 to: 36)
				declaredAt: (26 to: 29)) balance ] valueCoveringAll:
				{38 to: 44} ]
		ifEmpty: [
			0 coverAll:
				{57 to: 57} ]] valueCoveringAll:
		{19 to: 22. 47 to: 54}.! !

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 's 10/15/2022 13:04:26'!
PASSED!
!Behavior method!
register: aValue on: account
	| transaction |
	(transaction _ [
	(self coverAll:
		{66 to: 69}) for:
		(aValue
			cover: (76 to: 81)
			declaredAt: (11 to: 16)) ] valueCoveringAll:
		{71 to: 74})
		cover: (51 to: 61)
		declaredAt: (34 to: 44).
	[
	(account
		cover: (85 to: 91)
		declaredAt: (22 to: 28)) addTransaction:
		(transaction
			cover: (109 to: 119)
			declaredAt: (34 to: 44)) ] valueCoveringAll:
		{93 to: 107}.
	^ transaction
		cover: (128 to: 138)
		declaredAt: (34 to: 44).! !
!Behavior method!
for: aValue
	^ [
	([
	(self coverAll:
		{17 to: 20}) new ] valueCoveringAll:
		{22 to: 24}) initializeFor:
		(aValue
			cover: (41 to: 46)
			declaredAt: (6 to: 11)) ] valueCoveringAll:
		{26 to: 39}.! !
!Behavior method!
initializeFor: aValue
	(value _ aValue
		cover: (34 to: 39)
		declaredAt: (16 to: 21))
		cover: (25 to: 29)
		declaredAt: (25 to: 29).! !
!Behavior method!
addTransaction: aTransaction
	[
	(self coverAll:
		{31 to: 34}) addTransactionToAllTheAssetsIBelong:
		(aTransaction
			cover: (73 to: 84)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{36 to: 71}.
	[
	(transactions
		cover: (88 to: 99)
		declaredAt: (88 to: 99)) add:
		(aTransaction
			cover: (106 to: 117)
			declaredAt: (17 to: 28)) ] valueCoveringAll:
		{101 to: 104}.! !
!Behavior method!
addTransactionToAllTheAssetsIBelong: aTransaction
	^ [
	(parents
		cover: (55 to: 61)
		declaredAt: (55 to: 61)) do: [ :parent |
		[
		(parent
			cover: (77 to: 82)
			declaredAt: (68 to: 73)) addTransactions:
			([
			(OrderedCollection
				cover: (102 to: 118)
				declaredAt: (102 to: 118)) with:
				(aTransaction
					cover: (126 to: 137)
					declaredAt: (38 to: 49)) ] valueCoveringAll:
				{120 to: 124}) ] valueCoveringAll:
			{84 to: 99} ]] valueCoveringAll:
		{63 to: 65}.! !
!Behavior method!
add: anAsset
	[
	(self coverAll:
		{15 to: 18}) raiseErrorIfCannotAdd:
		(anAsset
			cover: (43 to: 49)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{20 to: 41}.
	[
	(self coverAll:
		{53 to: 56}) safeAdd:
		(anAsset
			cover: (67 to: 73)
			declaredAt: (6 to: 12)) ] valueCoveringAll:
		{58 to: 65}.
	[
	(self coverAll:
		{77 to: 80}) addTransactions:
		([
		(anAsset
			cover: (100 to: 106)
			declaredAt: (6 to: 12)) transactions ] valueCoveringAll:
			{108 to: 119}) ] valueCoveringAll:
		{82 to: 97}.! !
!Behavior method!
raiseErrorIfCannotAdd: anAsset
	^ [
	([
	(self coverAll:
		{37 to: 40}) canAdd:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (24 to: 30)) ] valueCoveringAll:
		{42 to: 48}) ifFalse: [
		[
		(self coverAll:
			{69 to: 72}) error:
			([
			([
			(self coverAll:
				{81 to: 84}) class ] valueCoveringAll:
				{86 to: 90}) cannotAddAssetErrorMessage ] valueCoveringAll:
				{92 to: 117}) ] valueCoveringAll:
			{74 to: 79} ]] valueCoveringAll:
		{59 to: 66}.! !
!Behavior method!
canAdd: anAsset
	^ [
	([
	(self coverAll:
		{22 to: 25}) isNotOneOfMyAssets:
		(anAsset
			cover: (47 to: 53)
			declaredAt: (9 to: 15)) ] valueCoveringAll:
		{27 to: 45}) and: [
		[
		(self coverAll:
			{65 to: 68}) canTheAssetsIBelongToAdd:
			(anAsset
				cover: (96 to: 102)
				declaredAt: (9 to: 15)) ] valueCoveringAll:
			{70 to: 94} ]] valueCoveringAll:
		{57 to: 60}.! !
!Behavior method!
isNotOneOfMyAssets: anAsset
	^ [
	([
	(self coverAll:
		{35 to: 38}) hasAsset:
		(anAsset
			cover: (50 to: 56)
			declaredAt: (21 to: 27)) ] valueCoveringAll:
		{40 to: 48}) not ] valueCoveringAll:
		{60 to: 62}.! !
!Behavior method!
hasAsset: anAsset
	^ [
	([
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}) or: [
		[
		(self coverAll:
			{42 to: 45}) oneOfMyAssetsHas:
			(anAsset
				cover: (65 to: 71)
				declaredAt: (11 to: 17)) ] valueCoveringAll:
			{47 to: 63} ]] valueCoveringAll:
		{37 to: 39}.! !
!Behavior method!
oneOfMyAssetsHas: anAsset
	^ [
	(assets
		cover: (31 to: 36)
		declaredAt: (31 to: 36)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasAsset:
			(anAsset
				cover: (77 to: 83)
				declaredAt: (19 to: 25)) ] valueCoveringAll:
			{67 to: 75} ]] valueCoveringAll:
		{38 to: 48}.! !
!Behavior method!
canTheAssetsIBelongToAdd: anAsset
	^ [
	(parents
		cover: (39 to: 45)
		declaredAt: (39 to: 45)) allSatisfy: [ :parent |
		[
		(parent
			cover: (70 to: 75)
			declaredAt: (61 to: 66)) canAdd:
			(anAsset
				cover: (85 to: 91)
				declaredAt: (27 to: 33)) ] valueCoveringAll:
			{77 to: 83} ]] valueCoveringAll:
		{47 to: 57}.! !
!Behavior method!
safeAdd: anAsset
	[
	(anAsset
		cover: (20 to: 26)
		declaredAt: (10 to: 16)) toBeAddedTo:
		(self coverAll:
			{41 to: 44}) ] valueCoveringAll:
		{28 to: 39}.
	[
	(assets
		cover: (48 to: 53)
		declaredAt: (48 to: 53)) add:
		(anAsset
			cover: (60 to: 66)
			declaredAt: (10 to: 16)) ] valueCoveringAll:
		{55 to: 58}.! !
!Behavior method!
toBeAddedTo: aParentPortfolio
	[
	(parents
		cover: (32 to: 38)
		declaredAt: (32 to: 38)) add:
		(aParentPortfolio
			cover: (45 to: 60)
			declaredAt: (14 to: 29)) ] valueCoveringAll:
		{40 to: 43}.! !
!Behavior method!
transactions
	^ transactions
		cover: (19 to: 30)
		declaredAt: (19 to: 30).! !
!Behavior method!
addTransactions: someTransactions
	[
	(self coverAll:
		{37 to: 40}) addTransactionsToAllTheAssetsIBelong:
		(someTransactions
			cover: (80 to: 95)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{42 to: 78}.
	[
	(transactions
		cover: (99 to: 110)
		declaredAt: (99 to: 110)) addAll:
		(someTransactions
			cover: (120 to: 135)
			declaredAt: (18 to: 33)) ] valueCoveringAll:
		{112 to: 118}.! !
!Behavior method!
addTransactionsToAllTheAssetsIBelong: someTransactions
	^ [
	(parents
		cover: (60 to: 66)
		declaredAt: (60 to: 66)) do: [ :parent |
		[
		(parent
			cover: (82 to: 87)
			declaredAt: (73 to: 78)) addTransactions:
			(someTransactions
				cover: (106 to: 121)
				declaredAt: (39 to: 54)) ] valueCoveringAll:
			{89 to: 104} ]] valueCoveringAll:
		{68 to: 70}.! !
!Behavior method!
balance
	^ [
	(transactions
		cover: (12 to: 23)
		declaredAt: (12 to: 23))
		inject:
			(0 coverAll:
				{33 to: 33})
		into: [ :acc :transaction |
			[
			(transaction
				cover: (63 to: 73)
				declaredAt: (48 to: 58)) addTransactionMarketValue:
				(acc
					cover: (102 to: 104)
					declaredAt: (43 to: 45)) ] valueCoveringAll:
				{75 to: 100} ]] valueCoveringAll:
		{25 to: 31. 35 to: 39}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) +
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !
!Behavior method!
value
	^ value
		cover: (10 to: 14)
		declaredAt: (10 to: 14).! !

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 's 10/15/2022 13:04:26'!
PASSED!
!Behavior method!
hasAsset: anAsset
	^ [
	(anAsset
		cover: (22 to: 28)
		declaredAt: (11 to: 17)) =
		(self coverAll:
			{32 to: 35}) ] valueCoveringAll:
		{30 to: 30}.! !
!Behavior method!
addTransactionMarketValue: aMarketValue
	^ [
	(aMarketValue
		cover: (43 to: 54)
		declaredAt: (28 to: 39)) -
		([
		(self coverAll:
			{58 to: 61}) value ] valueCoveringAll:
			{63 to: 67}) ] valueCoveringAll:
		{56 to: 56}.! !

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 's 10/15/2022 13:04:26'!
PASSED!
!Behavior method!
with: anAsset
	| portfolio |
	(portfolio _ [
	(self coverAll:
		{42 to: 45}) new ] valueCoveringAll:
		{47 to: 49})
		cover: (29 to: 37)
		declaredAt: (17 to: 25).
	[
	(portfolio
		cover: (53 to: 61)
		declaredAt: (17 to: 25)) add:
		(anAsset
			cover: (68 to: 74)
			declaredAt: (7 to: 13)) ] valueCoveringAll:
		{63 to: 66}.
	^ portfolio
		cover: (80 to: 88)
		declaredAt: (17 to: 25).! !

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 's 10/15/2022 13:04:26'!
PASSED!
!Behavior method!
hasRegistered: aTransaction
	^ [
	(assets
		cover: (32 to: 37)
		declaredAt: (32 to: 37)) anySatisfy: [ :asset |
		[
		(asset
			cover: (61 to: 65)
			declaredAt: (53 to: 57)) hasRegistered:
			(aTransaction
				cover: (82 to: 93)
				declaredAt: (16 to: 27)) ] valueCoveringAll:
			{67 to: 80} ]] valueCoveringAll:
		{39 to: 49}.! !
!Behavior method!
hasRegistered: aTransaction
	^ [
	(transactions
		cover: (33 to: 44)
		declaredAt: (33 to: 44)) includes:
		(aTransaction
			cover: (56 to: 67)
			declaredAt: (16 to: 27)) ] valueCoveringAll:
		{46 to: 54}.! !

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 's 10/15/2022 13:04:26'!
PASSED!
!Behavior method!
cannotAddAssetErrorMessage
	^ 'Cannot add duplicated asset' coverAll:
		{30 to: 58}.! !

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 's 10/15/2022 13:04:26'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 's 10/15/2022 13:04:27'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 's 10/15/2022 13:04:27'!
PASSED!

----SNAPSHOT----(15 October 2022 13:04:34) CuisUniversity-5466.image priorSource: 7509755!

----STARTUP---- (15 October 2022 23:02:46) as C:\Users\Echu\Downloads\Inge 1\windows64\CuisUniversity-5466.image!


----End fileIn of C:\Users\Echu\Downloads\Portfolio-Ejercicio.st----!

!testRun: #ReceptiveAccountTest #test01ReceptiveAccountHaveZeroAsBalanceWhenCreated stamp: 'E 10/15/2022 23:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test02DepositIncreasesBalanceOnTransactionValue stamp: 'E 10/15/2022 23:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test03WithdrawDecreasesBalanceOnTransactionValue stamp: 'E 10/15/2022 23:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test04WithdrawValueMustBePositive stamp: 'E 10/15/2022 23:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test05ReceptiveAccountKnowsRegisteredTransactions stamp: 'E 10/15/2022 23:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test06ReceptiveAccountDoNotKnowNotRegisteredTransactions stamp: 'E 10/15/2022 23:03:24'!
PASSED!

!testRun: #ReceptiveAccountTest #test07AccountKnowsItsTransactions stamp: 'E 10/15/2022 23:03:24'!
PASSED!

!testRun: #PortfolioTest #test01EmptyPortfolioHasZeroBalanceWhenCreated stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test02PortfolioBalanceIncreasesWithOneAccount stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test03PortfolioBalanceWithMultipleAccounts stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test04PortfolioBalanceWithMultipleAccountsAndPortfolio stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test05PortfolioHasRegisteredSomeTransaction stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test06PortfolioHasNotRegisteredSomeTransaction stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test07PortfolioCannotAddAccountTwoTimesAtSameLevel stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test08PortfolioCannotAddAccountIfAlreadyPresentInAnAddedPortfolio stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test09PortfolioCannotAddAccountIfAlreadyPresentInAParentPortfolio stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test10PortfolioCannotAddPortfolioIfAlreadyPresentInAnAncestorPortfolio stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test11EmptyPortfolioHasEmptyTransactions stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test12PortfolioHasTheTransactionsOfDirectAccount stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test13PortfolioHasTransactionsOfIndirectAccount stamp: 'E 10/15/2022 23:03:26'!
PASSED!

!testRun: #PortfolioTest #test14PortfolioHasTheLatestTransactionsOfDifferentAccounts stamp: 'E 10/15/2022 23:03:26'!
PASSED!